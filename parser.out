Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AVERAGE
    BREAK
    CASE
    COLON
    DO
    ELSE
    FALSE
    FOR
    IF
    MEAN
    MODE
    MODULE
    NOT
    PI
    POINT
    POWER
    PRINT
    SQRT
    SWITCH
    TRUE
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> globales funciones principal END
Rule 2     globales -> pn_crearsubdirectoriog loopglobales
Rule 3     pn_crearsubdirectoriog -> empty
Rule 4     loopglobales -> declarar loopglobales
Rule 5     loopglobales -> empty
Rule 6     funciones -> funcionesloop
Rule 7     funciones -> empty
Rule 8     funcionesloop -> FUNC pn_st_functype ID pn_st_functionid funcparameters bloque funciones
Rule 9     pn_st_functype -> INT
Rule 10    pn_st_functype -> FLOAT
Rule 11    pn_st_functype -> BOOL
Rule 12    pn_st_functype -> STRING
Rule 13    pn_st_functype -> VOID
Rule 14    pn_st_functionid -> empty
Rule 15    funcparameters -> LPAREN funcparametersloop RPAREN
Rule 16    funcparametersloop -> pn_parameter tipo ID pn_currentid funcparametersloop
Rule 17    funcparametersloop -> COMMA pn_parameter tipo ID pn_currentid funcparametersloop
Rule 18    funcparametersloop -> empty
Rule 19    pn_parameter -> empty
Rule 20    principal -> MAIN pn_crearsubdirectoriom bloque
Rule 21    pn_crearsubdirectoriom -> empty
Rule 22    bloque -> LCORCHO bloqueloop RCORCHO
Rule 23    bloqueloop -> estatuto bloqueloop
Rule 24    bloqueloop -> empty
Rule 25    estatuto -> declarar
Rule 26    declarar -> noinicializada
Rule 27    declarar -> inicializada
Rule 28    declarar -> CONS pn_currentcons inicializada
Rule 29    pn_currentcons -> empty
Rule 30    noinicializada -> tipo ID pn_currentid PNTCOMMA
Rule 31    noinicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA
Rule 32    noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA
Rule 33    inicializada -> tipo ID pn_currentid inicializada_asignacion
Rule 34    inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr
Rule 35    inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat
Rule 36    pn_currentspecial -> empty
Rule 37    tipo -> INT pn_currenttype
Rule 38    tipo -> FLOAT pn_currenttype
Rule 39    tipo -> BOOL pn_currenttype
Rule 40    tipo -> STRING pn_currenttype
Rule 41    pn_currenttype -> empty
Rule 42    pn_currentid -> empty
Rule 43    bracket -> LBRCKT DTI RBRCKT
Rule 44    bracket -> LBRCKT ID RBRCKT
Rule 45    asignacion -> ID EQUALS expresion PNTCOMMA
Rule 46    inicializada_asignacion -> EQUALS expresion PNTCOMMA
Rule 47    asignacioninicialarr -> EQUALS looparreglo PNTCOMMA
Rule 48    asignacioninicialmat -> EQUALS looparreglo looparreglo PNTCOMMA
Rule 49    looparreglo -> LBRCKT expresion expresionloop RBRCKT
Rule 50    expresionloop -> COMMA expresion expresionloop
Rule 51    expresionloop -> empty
Rule 52    expresion -> exp expresionrelacional
Rule 53    expresionrelacional -> GREATER exp
Rule 54    expresionrelacional -> LOWER exp
Rule 55    expresionrelacional -> SAME exp
Rule 56    expresionrelacional -> LEQUAL exp
Rule 57    expresionrelacional -> GEQUAL exp
Rule 58    expresionrelacional -> NOTEQUAL exp
Rule 59    expresionrelacional -> AND exp
Rule 60    expresionrelacional -> OR exp
Rule 61    expresionrelacional -> empty
Rule 62    exp -> termino pn_quadruples_checksumres expsumres
Rule 63    expsumres -> PLUS pn_quadruples_addsumres exp
Rule 64    expsumres -> MINUS pn_quadruples_addsumres exp
Rule 65    expsumres -> empty
Rule 66    pn_quadruples_checksumres -> empty
Rule 67    pn_quadruples_addsumres -> empty
Rule 68    termino -> factor pn_quadruples_checkmuldiv terminomuldiv
Rule 69    terminomuldiv -> TIMES pn_quadruples_addmuldiv termino
Rule 70    terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino
Rule 71    terminomuldiv -> empty
Rule 72    pn_quadruples_checkmuldiv -> empty
Rule 73    pn_quadruples_addmuldiv -> empty
Rule 74    factor -> vardt
Rule 75    vardt -> ID pn_quadruples_getvariable
Rule 76    vardt -> DTI
Rule 77    vardt -> DTF
Rule 78    vardt -> DTB
Rule 79    vardt -> DTS
Rule 80    vardt -> ID bracket
Rule 81    vardt -> ID bracket bracket
Rule 82    pn_quadruples_getvariable -> empty
Rule 83    empty -> <empty>

Terminals, with rules where they appear

AND                  : 59
ARR                  : 31 34
AVERAGE              : 
BOOL                 : 11 39
BREAK                : 
CASE                 : 
COLON                : 
COMMA                : 17 50
CONS                 : 28
DIVIDE               : 70
DO                   : 
DTB                  : 78
DTF                  : 77
DTI                  : 43 76
DTS                  : 79
ELSE                 : 
END                  : 1
EQUALS               : 45 46 47 48
FALSE                : 
FLOAT                : 10 38
FOR                  : 
FUNC                 : 8
GEQUAL               : 57
GREATER              : 53
ID                   : 8 16 17 30 31 32 33 34 35 44 45 75 80 81
IF                   : 
INT                  : 9 37
LBRCKT               : 43 44 49
LCORCHO              : 22
LEQUAL               : 56
LOWER                : 54
LPAREN               : 15
MAIN                 : 20
MAT                  : 32 35
MEAN                 : 
MINUS                : 64
MODE                 : 
MODULE               : 
NOT                  : 
NOTEQUAL             : 58
OR                   : 60
PI                   : 
PLUS                 : 63
PNTCOMMA             : 30 31 32 45 46 47 48
POINT                : 
POWER                : 
PRINT                : 
RBRCKT               : 43 44 49
RCORCHO              : 22
RPAREN               : 15
SAME                 : 55
SQRT                 : 
STRING               : 12 40
SWITCH               : 
TIMES                : 69
TRUE                 : 
VOID                 : 13
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 
asignacioninicialarr : 34
asignacioninicialmat : 35
bloque               : 8 20
bloqueloop           : 22 23
bracket              : 31 32 32 34 35 35 80 81 81
declarar             : 4 25
empty                : 3 5 7 14 18 19 21 24 29 36 41 42 51 61 65 66 67 71 72 73 82
estatuto             : 23
exp                  : 52 53 54 55 56 57 58 59 60 63 64
expresion            : 45 46 49 50
expresionloop        : 49 50
expresionrelacional  : 52
expsumres            : 62
factor               : 68
funciones            : 1 8
funcionesloop        : 6
funcparameters       : 8
funcparametersloop   : 15 16 17
globales             : 1
inicializada         : 27 28
inicializada_asignacion : 33
looparreglo          : 47 48 48
loopglobales         : 2 4
noinicializada       : 26
pn_crearsubdirectoriog : 2
pn_crearsubdirectoriom : 20
pn_currentcons       : 28
pn_currentid         : 16 17 30 31 32 33 34 35
pn_currentspecial    : 31 32 34 35
pn_currenttype       : 37 38 39 40
pn_parameter         : 16 17
pn_quadruples_addmuldiv : 69 70
pn_quadruples_addsumres : 63 64
pn_quadruples_checkmuldiv : 68
pn_quadruples_checksumres : 62
pn_quadruples_getvariable : 75
pn_st_functionid     : 8
pn_st_functype       : 8
principal            : 1
programa             : 0
termino              : 62 69 70
terminomuldiv        : 68
tipo                 : 16 17 30 31 32 33 34 35
vardt                : 74

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . globales funciones principal END
    (2) globales -> . pn_crearsubdirectoriog loopglobales
    (3) pn_crearsubdirectoriog -> . empty
    (83) empty -> .

    CONS            reduce using rule 83 (empty -> .)
    ARR             reduce using rule 83 (empty -> .)
    MAT             reduce using rule 83 (empty -> .)
    INT             reduce using rule 83 (empty -> .)
    FLOAT           reduce using rule 83 (empty -> .)
    BOOL            reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)
    FUNC            reduce using rule 83 (empty -> .)
    MAIN            reduce using rule 83 (empty -> .)

    programa                       shift and go to state 1
    globales                       shift and go to state 2
    pn_crearsubdirectoriog         shift and go to state 3
    empty                          shift and go to state 4

state 1

    (0) S' -> programa .



state 2

    (1) programa -> globales . funciones principal END
    (6) funciones -> . funcionesloop
    (7) funciones -> . empty
    (8) funcionesloop -> . FUNC pn_st_functype ID pn_st_functionid funcparameters bloque funciones
    (83) empty -> .

    FUNC            shift and go to state 8
    MAIN            reduce using rule 83 (empty -> .)

    funciones                      shift and go to state 5
    funcionesloop                  shift and go to state 6
    empty                          shift and go to state 7

state 3

    (2) globales -> pn_crearsubdirectoriog . loopglobales
    (4) loopglobales -> . declarar loopglobales
    (5) loopglobales -> . empty
    (26) declarar -> . noinicializada
    (27) declarar -> . inicializada
    (28) declarar -> . CONS pn_currentcons inicializada
    (83) empty -> .
    (30) noinicializada -> . tipo ID pn_currentid PNTCOMMA
    (31) noinicializada -> . ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA
    (32) noinicializada -> . MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA
    (33) inicializada -> . tipo ID pn_currentid inicializada_asignacion
    (34) inicializada -> . ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr
    (35) inicializada -> . MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat
    (37) tipo -> . INT pn_currenttype
    (38) tipo -> . FLOAT pn_currenttype
    (39) tipo -> . BOOL pn_currenttype
    (40) tipo -> . STRING pn_currenttype

    CONS            shift and go to state 14
    FUNC            reduce using rule 83 (empty -> .)
    MAIN            reduce using rule 83 (empty -> .)
    ARR             shift and go to state 16
    MAT             shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 21

    loopglobales                   shift and go to state 9
    declarar                       shift and go to state 10
    empty                          shift and go to state 11
    noinicializada                 shift and go to state 12
    inicializada                   shift and go to state 13
    tipo                           shift and go to state 15

state 4

    (3) pn_crearsubdirectoriog -> empty .

    CONS            reduce using rule 3 (pn_crearsubdirectoriog -> empty .)
    ARR             reduce using rule 3 (pn_crearsubdirectoriog -> empty .)
    MAT             reduce using rule 3 (pn_crearsubdirectoriog -> empty .)
    INT             reduce using rule 3 (pn_crearsubdirectoriog -> empty .)
    FLOAT           reduce using rule 3 (pn_crearsubdirectoriog -> empty .)
    BOOL            reduce using rule 3 (pn_crearsubdirectoriog -> empty .)
    STRING          reduce using rule 3 (pn_crearsubdirectoriog -> empty .)
    FUNC            reduce using rule 3 (pn_crearsubdirectoriog -> empty .)
    MAIN            reduce using rule 3 (pn_crearsubdirectoriog -> empty .)


state 5

    (1) programa -> globales funciones . principal END
    (20) principal -> . MAIN pn_crearsubdirectoriom bloque

    MAIN            shift and go to state 23

    principal                      shift and go to state 22

state 6

    (6) funciones -> funcionesloop .

    MAIN            reduce using rule 6 (funciones -> funcionesloop .)


state 7

    (7) funciones -> empty .

    MAIN            reduce using rule 7 (funciones -> empty .)


state 8

    (8) funcionesloop -> FUNC . pn_st_functype ID pn_st_functionid funcparameters bloque funciones
    (9) pn_st_functype -> . INT
    (10) pn_st_functype -> . FLOAT
    (11) pn_st_functype -> . BOOL
    (12) pn_st_functype -> . STRING
    (13) pn_st_functype -> . VOID

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    BOOL            shift and go to state 27
    STRING          shift and go to state 28
    VOID            shift and go to state 29

    pn_st_functype                 shift and go to state 24

state 9

    (2) globales -> pn_crearsubdirectoriog loopglobales .

    FUNC            reduce using rule 2 (globales -> pn_crearsubdirectoriog loopglobales .)
    MAIN            reduce using rule 2 (globales -> pn_crearsubdirectoriog loopglobales .)


state 10

    (4) loopglobales -> declarar . loopglobales
    (4) loopglobales -> . declarar loopglobales
    (5) loopglobales -> . empty
    (26) declarar -> . noinicializada
    (27) declarar -> . inicializada
    (28) declarar -> . CONS pn_currentcons inicializada
    (83) empty -> .
    (30) noinicializada -> . tipo ID pn_currentid PNTCOMMA
    (31) noinicializada -> . ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA
    (32) noinicializada -> . MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA
    (33) inicializada -> . tipo ID pn_currentid inicializada_asignacion
    (34) inicializada -> . ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr
    (35) inicializada -> . MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat
    (37) tipo -> . INT pn_currenttype
    (38) tipo -> . FLOAT pn_currenttype
    (39) tipo -> . BOOL pn_currenttype
    (40) tipo -> . STRING pn_currenttype

    CONS            shift and go to state 14
    FUNC            reduce using rule 83 (empty -> .)
    MAIN            reduce using rule 83 (empty -> .)
    ARR             shift and go to state 16
    MAT             shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 21

    declarar                       shift and go to state 10
    loopglobales                   shift and go to state 30
    empty                          shift and go to state 11
    noinicializada                 shift and go to state 12
    inicializada                   shift and go to state 13
    tipo                           shift and go to state 15

state 11

    (5) loopglobales -> empty .

    FUNC            reduce using rule 5 (loopglobales -> empty .)
    MAIN            reduce using rule 5 (loopglobales -> empty .)


state 12

    (26) declarar -> noinicializada .

    CONS            reduce using rule 26 (declarar -> noinicializada .)
    ARR             reduce using rule 26 (declarar -> noinicializada .)
    MAT             reduce using rule 26 (declarar -> noinicializada .)
    INT             reduce using rule 26 (declarar -> noinicializada .)
    FLOAT           reduce using rule 26 (declarar -> noinicializada .)
    BOOL            reduce using rule 26 (declarar -> noinicializada .)
    STRING          reduce using rule 26 (declarar -> noinicializada .)
    FUNC            reduce using rule 26 (declarar -> noinicializada .)
    MAIN            reduce using rule 26 (declarar -> noinicializada .)
    RCORCHO         reduce using rule 26 (declarar -> noinicializada .)


state 13

    (27) declarar -> inicializada .

    CONS            reduce using rule 27 (declarar -> inicializada .)
    ARR             reduce using rule 27 (declarar -> inicializada .)
    MAT             reduce using rule 27 (declarar -> inicializada .)
    INT             reduce using rule 27 (declarar -> inicializada .)
    FLOAT           reduce using rule 27 (declarar -> inicializada .)
    BOOL            reduce using rule 27 (declarar -> inicializada .)
    STRING          reduce using rule 27 (declarar -> inicializada .)
    FUNC            reduce using rule 27 (declarar -> inicializada .)
    MAIN            reduce using rule 27 (declarar -> inicializada .)
    RCORCHO         reduce using rule 27 (declarar -> inicializada .)


state 14

    (28) declarar -> CONS . pn_currentcons inicializada
    (29) pn_currentcons -> . empty
    (83) empty -> .

    ARR             reduce using rule 83 (empty -> .)
    MAT             reduce using rule 83 (empty -> .)
    INT             reduce using rule 83 (empty -> .)
    FLOAT           reduce using rule 83 (empty -> .)
    BOOL            reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)

    pn_currentcons                 shift and go to state 31
    empty                          shift and go to state 32

state 15

    (30) noinicializada -> tipo . ID pn_currentid PNTCOMMA
    (33) inicializada -> tipo . ID pn_currentid inicializada_asignacion

    ID              shift and go to state 33


state 16

    (31) noinicializada -> ARR . pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA
    (34) inicializada -> ARR . pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr
    (36) pn_currentspecial -> . empty
    (83) empty -> .

    INT             reduce using rule 83 (empty -> .)
    FLOAT           reduce using rule 83 (empty -> .)
    BOOL            reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)

    pn_currentspecial              shift and go to state 34
    empty                          shift and go to state 35

state 17

    (32) noinicializada -> MAT . pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA
    (35) inicializada -> MAT . pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat
    (36) pn_currentspecial -> . empty
    (83) empty -> .

    INT             reduce using rule 83 (empty -> .)
    FLOAT           reduce using rule 83 (empty -> .)
    BOOL            reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)

    pn_currentspecial              shift and go to state 36
    empty                          shift and go to state 35

state 18

    (37) tipo -> INT . pn_currenttype
    (41) pn_currenttype -> . empty
    (83) empty -> .

    ID              reduce using rule 83 (empty -> .)

    pn_currenttype                 shift and go to state 37
    empty                          shift and go to state 38

state 19

    (38) tipo -> FLOAT . pn_currenttype
    (41) pn_currenttype -> . empty
    (83) empty -> .

    ID              reduce using rule 83 (empty -> .)

    pn_currenttype                 shift and go to state 39
    empty                          shift and go to state 38

state 20

    (39) tipo -> BOOL . pn_currenttype
    (41) pn_currenttype -> . empty
    (83) empty -> .

    ID              reduce using rule 83 (empty -> .)

    pn_currenttype                 shift and go to state 40
    empty                          shift and go to state 38

state 21

    (40) tipo -> STRING . pn_currenttype
    (41) pn_currenttype -> . empty
    (83) empty -> .

    ID              reduce using rule 83 (empty -> .)

    pn_currenttype                 shift and go to state 41
    empty                          shift and go to state 38

state 22

    (1) programa -> globales funciones principal . END

    END             shift and go to state 42


state 23

    (20) principal -> MAIN . pn_crearsubdirectoriom bloque
    (21) pn_crearsubdirectoriom -> . empty
    (83) empty -> .

    LCORCHO         reduce using rule 83 (empty -> .)

    pn_crearsubdirectoriom         shift and go to state 43
    empty                          shift and go to state 44

state 24

    (8) funcionesloop -> FUNC pn_st_functype . ID pn_st_functionid funcparameters bloque funciones

    ID              shift and go to state 45


state 25

    (9) pn_st_functype -> INT .

    ID              reduce using rule 9 (pn_st_functype -> INT .)


state 26

    (10) pn_st_functype -> FLOAT .

    ID              reduce using rule 10 (pn_st_functype -> FLOAT .)


state 27

    (11) pn_st_functype -> BOOL .

    ID              reduce using rule 11 (pn_st_functype -> BOOL .)


state 28

    (12) pn_st_functype -> STRING .

    ID              reduce using rule 12 (pn_st_functype -> STRING .)


state 29

    (13) pn_st_functype -> VOID .

    ID              reduce using rule 13 (pn_st_functype -> VOID .)


state 30

    (4) loopglobales -> declarar loopglobales .

    FUNC            reduce using rule 4 (loopglobales -> declarar loopglobales .)
    MAIN            reduce using rule 4 (loopglobales -> declarar loopglobales .)


state 31

    (28) declarar -> CONS pn_currentcons . inicializada
    (33) inicializada -> . tipo ID pn_currentid inicializada_asignacion
    (34) inicializada -> . ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr
    (35) inicializada -> . MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat
    (37) tipo -> . INT pn_currenttype
    (38) tipo -> . FLOAT pn_currenttype
    (39) tipo -> . BOOL pn_currenttype
    (40) tipo -> . STRING pn_currenttype

    ARR             shift and go to state 48
    MAT             shift and go to state 49
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 21

    inicializada                   shift and go to state 46
    tipo                           shift and go to state 47

state 32

    (29) pn_currentcons -> empty .

    ARR             reduce using rule 29 (pn_currentcons -> empty .)
    MAT             reduce using rule 29 (pn_currentcons -> empty .)
    INT             reduce using rule 29 (pn_currentcons -> empty .)
    FLOAT           reduce using rule 29 (pn_currentcons -> empty .)
    BOOL            reduce using rule 29 (pn_currentcons -> empty .)
    STRING          reduce using rule 29 (pn_currentcons -> empty .)


state 33

    (30) noinicializada -> tipo ID . pn_currentid PNTCOMMA
    (33) inicializada -> tipo ID . pn_currentid inicializada_asignacion
    (42) pn_currentid -> . empty
    (83) empty -> .

    PNTCOMMA        reduce using rule 83 (empty -> .)
    EQUALS          reduce using rule 83 (empty -> .)

    pn_currentid                   shift and go to state 50
    empty                          shift and go to state 51

state 34

    (31) noinicializada -> ARR pn_currentspecial . tipo ID pn_currentid bracket PNTCOMMA
    (34) inicializada -> ARR pn_currentspecial . tipo ID pn_currentid bracket asignacioninicialarr
    (37) tipo -> . INT pn_currenttype
    (38) tipo -> . FLOAT pn_currenttype
    (39) tipo -> . BOOL pn_currenttype
    (40) tipo -> . STRING pn_currenttype

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 21

    tipo                           shift and go to state 52

state 35

    (36) pn_currentspecial -> empty .

    INT             reduce using rule 36 (pn_currentspecial -> empty .)
    FLOAT           reduce using rule 36 (pn_currentspecial -> empty .)
    BOOL            reduce using rule 36 (pn_currentspecial -> empty .)
    STRING          reduce using rule 36 (pn_currentspecial -> empty .)


state 36

    (32) noinicializada -> MAT pn_currentspecial . tipo ID pn_currentid bracket bracket PNTCOMMA
    (35) inicializada -> MAT pn_currentspecial . tipo ID pn_currentid bracket bracket asignacioninicialmat
    (37) tipo -> . INT pn_currenttype
    (38) tipo -> . FLOAT pn_currenttype
    (39) tipo -> . BOOL pn_currenttype
    (40) tipo -> . STRING pn_currenttype

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 21

    tipo                           shift and go to state 53

state 37

    (37) tipo -> INT pn_currenttype .

    ID              reduce using rule 37 (tipo -> INT pn_currenttype .)


state 38

    (41) pn_currenttype -> empty .

    ID              reduce using rule 41 (pn_currenttype -> empty .)


state 39

    (38) tipo -> FLOAT pn_currenttype .

    ID              reduce using rule 38 (tipo -> FLOAT pn_currenttype .)


state 40

    (39) tipo -> BOOL pn_currenttype .

    ID              reduce using rule 39 (tipo -> BOOL pn_currenttype .)


state 41

    (40) tipo -> STRING pn_currenttype .

    ID              reduce using rule 40 (tipo -> STRING pn_currenttype .)


state 42

    (1) programa -> globales funciones principal END .

    $end            reduce using rule 1 (programa -> globales funciones principal END .)


state 43

    (20) principal -> MAIN pn_crearsubdirectoriom . bloque
    (22) bloque -> . LCORCHO bloqueloop RCORCHO

    LCORCHO         shift and go to state 55

    bloque                         shift and go to state 54

state 44

    (21) pn_crearsubdirectoriom -> empty .

    LCORCHO         reduce using rule 21 (pn_crearsubdirectoriom -> empty .)


state 45

    (8) funcionesloop -> FUNC pn_st_functype ID . pn_st_functionid funcparameters bloque funciones
    (14) pn_st_functionid -> . empty
    (83) empty -> .

    LPAREN          reduce using rule 83 (empty -> .)

    pn_st_functionid               shift and go to state 56
    empty                          shift and go to state 57

state 46

    (28) declarar -> CONS pn_currentcons inicializada .

    CONS            reduce using rule 28 (declarar -> CONS pn_currentcons inicializada .)
    ARR             reduce using rule 28 (declarar -> CONS pn_currentcons inicializada .)
    MAT             reduce using rule 28 (declarar -> CONS pn_currentcons inicializada .)
    INT             reduce using rule 28 (declarar -> CONS pn_currentcons inicializada .)
    FLOAT           reduce using rule 28 (declarar -> CONS pn_currentcons inicializada .)
    BOOL            reduce using rule 28 (declarar -> CONS pn_currentcons inicializada .)
    STRING          reduce using rule 28 (declarar -> CONS pn_currentcons inicializada .)
    FUNC            reduce using rule 28 (declarar -> CONS pn_currentcons inicializada .)
    MAIN            reduce using rule 28 (declarar -> CONS pn_currentcons inicializada .)
    RCORCHO         reduce using rule 28 (declarar -> CONS pn_currentcons inicializada .)


state 47

    (33) inicializada -> tipo . ID pn_currentid inicializada_asignacion

    ID              shift and go to state 58


state 48

    (34) inicializada -> ARR . pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr
    (36) pn_currentspecial -> . empty
    (83) empty -> .

    INT             reduce using rule 83 (empty -> .)
    FLOAT           reduce using rule 83 (empty -> .)
    BOOL            reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)

    pn_currentspecial              shift and go to state 59
    empty                          shift and go to state 35

state 49

    (35) inicializada -> MAT . pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat
    (36) pn_currentspecial -> . empty
    (83) empty -> .

    INT             reduce using rule 83 (empty -> .)
    FLOAT           reduce using rule 83 (empty -> .)
    BOOL            reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)

    pn_currentspecial              shift and go to state 60
    empty                          shift and go to state 35

state 50

    (30) noinicializada -> tipo ID pn_currentid . PNTCOMMA
    (33) inicializada -> tipo ID pn_currentid . inicializada_asignacion
    (46) inicializada_asignacion -> . EQUALS expresion PNTCOMMA

    PNTCOMMA        shift and go to state 61
    EQUALS          shift and go to state 63

    inicializada_asignacion        shift and go to state 62

state 51

    (42) pn_currentid -> empty .

    PNTCOMMA        reduce using rule 42 (pn_currentid -> empty .)
    EQUALS          reduce using rule 42 (pn_currentid -> empty .)
    LBRCKT          reduce using rule 42 (pn_currentid -> empty .)
    COMMA           reduce using rule 42 (pn_currentid -> empty .)
    INT             reduce using rule 42 (pn_currentid -> empty .)
    FLOAT           reduce using rule 42 (pn_currentid -> empty .)
    BOOL            reduce using rule 42 (pn_currentid -> empty .)
    STRING          reduce using rule 42 (pn_currentid -> empty .)
    RPAREN          reduce using rule 42 (pn_currentid -> empty .)


state 52

    (31) noinicializada -> ARR pn_currentspecial tipo . ID pn_currentid bracket PNTCOMMA
    (34) inicializada -> ARR pn_currentspecial tipo . ID pn_currentid bracket asignacioninicialarr

    ID              shift and go to state 64


state 53

    (32) noinicializada -> MAT pn_currentspecial tipo . ID pn_currentid bracket bracket PNTCOMMA
    (35) inicializada -> MAT pn_currentspecial tipo . ID pn_currentid bracket bracket asignacioninicialmat

    ID              shift and go to state 65


state 54

    (20) principal -> MAIN pn_crearsubdirectoriom bloque .

    END             reduce using rule 20 (principal -> MAIN pn_crearsubdirectoriom bloque .)


state 55

    (22) bloque -> LCORCHO . bloqueloop RCORCHO
    (23) bloqueloop -> . estatuto bloqueloop
    (24) bloqueloop -> . empty
    (25) estatuto -> . declarar
    (83) empty -> .
    (26) declarar -> . noinicializada
    (27) declarar -> . inicializada
    (28) declarar -> . CONS pn_currentcons inicializada
    (30) noinicializada -> . tipo ID pn_currentid PNTCOMMA
    (31) noinicializada -> . ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA
    (32) noinicializada -> . MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA
    (33) inicializada -> . tipo ID pn_currentid inicializada_asignacion
    (34) inicializada -> . ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr
    (35) inicializada -> . MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat
    (37) tipo -> . INT pn_currenttype
    (38) tipo -> . FLOAT pn_currenttype
    (39) tipo -> . BOOL pn_currenttype
    (40) tipo -> . STRING pn_currenttype

    RCORCHO         reduce using rule 83 (empty -> .)
    CONS            shift and go to state 14
    ARR             shift and go to state 16
    MAT             shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 21

    bloqueloop                     shift and go to state 66
    estatuto                       shift and go to state 67
    empty                          shift and go to state 68
    declarar                       shift and go to state 69
    noinicializada                 shift and go to state 12
    inicializada                   shift and go to state 13
    tipo                           shift and go to state 15

state 56

    (8) funcionesloop -> FUNC pn_st_functype ID pn_st_functionid . funcparameters bloque funciones
    (15) funcparameters -> . LPAREN funcparametersloop RPAREN

    LPAREN          shift and go to state 71

    funcparameters                 shift and go to state 70

state 57

    (14) pn_st_functionid -> empty .

    LPAREN          reduce using rule 14 (pn_st_functionid -> empty .)


state 58

    (33) inicializada -> tipo ID . pn_currentid inicializada_asignacion
    (42) pn_currentid -> . empty
    (83) empty -> .

    EQUALS          reduce using rule 83 (empty -> .)

    pn_currentid                   shift and go to state 72
    empty                          shift and go to state 51

state 59

    (34) inicializada -> ARR pn_currentspecial . tipo ID pn_currentid bracket asignacioninicialarr
    (37) tipo -> . INT pn_currenttype
    (38) tipo -> . FLOAT pn_currenttype
    (39) tipo -> . BOOL pn_currenttype
    (40) tipo -> . STRING pn_currenttype

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 21

    tipo                           shift and go to state 73

state 60

    (35) inicializada -> MAT pn_currentspecial . tipo ID pn_currentid bracket bracket asignacioninicialmat
    (37) tipo -> . INT pn_currenttype
    (38) tipo -> . FLOAT pn_currenttype
    (39) tipo -> . BOOL pn_currenttype
    (40) tipo -> . STRING pn_currenttype

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 21

    tipo                           shift and go to state 74

state 61

    (30) noinicializada -> tipo ID pn_currentid PNTCOMMA .

    CONS            reduce using rule 30 (noinicializada -> tipo ID pn_currentid PNTCOMMA .)
    ARR             reduce using rule 30 (noinicializada -> tipo ID pn_currentid PNTCOMMA .)
    MAT             reduce using rule 30 (noinicializada -> tipo ID pn_currentid PNTCOMMA .)
    INT             reduce using rule 30 (noinicializada -> tipo ID pn_currentid PNTCOMMA .)
    FLOAT           reduce using rule 30 (noinicializada -> tipo ID pn_currentid PNTCOMMA .)
    BOOL            reduce using rule 30 (noinicializada -> tipo ID pn_currentid PNTCOMMA .)
    STRING          reduce using rule 30 (noinicializada -> tipo ID pn_currentid PNTCOMMA .)
    FUNC            reduce using rule 30 (noinicializada -> tipo ID pn_currentid PNTCOMMA .)
    MAIN            reduce using rule 30 (noinicializada -> tipo ID pn_currentid PNTCOMMA .)
    RCORCHO         reduce using rule 30 (noinicializada -> tipo ID pn_currentid PNTCOMMA .)


state 62

    (33) inicializada -> tipo ID pn_currentid inicializada_asignacion .

    CONS            reduce using rule 33 (inicializada -> tipo ID pn_currentid inicializada_asignacion .)
    ARR             reduce using rule 33 (inicializada -> tipo ID pn_currentid inicializada_asignacion .)
    MAT             reduce using rule 33 (inicializada -> tipo ID pn_currentid inicializada_asignacion .)
    INT             reduce using rule 33 (inicializada -> tipo ID pn_currentid inicializada_asignacion .)
    FLOAT           reduce using rule 33 (inicializada -> tipo ID pn_currentid inicializada_asignacion .)
    BOOL            reduce using rule 33 (inicializada -> tipo ID pn_currentid inicializada_asignacion .)
    STRING          reduce using rule 33 (inicializada -> tipo ID pn_currentid inicializada_asignacion .)
    FUNC            reduce using rule 33 (inicializada -> tipo ID pn_currentid inicializada_asignacion .)
    MAIN            reduce using rule 33 (inicializada -> tipo ID pn_currentid inicializada_asignacion .)
    RCORCHO         reduce using rule 33 (inicializada -> tipo ID pn_currentid inicializada_asignacion .)


state 63

    (46) inicializada_asignacion -> EQUALS . expresion PNTCOMMA
    (52) expresion -> . exp expresionrelacional
    (62) exp -> . termino pn_quadruples_checksumres expsumres
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    expresion                      shift and go to state 75
    exp                            shift and go to state 76
    termino                        shift and go to state 77
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 64

    (31) noinicializada -> ARR pn_currentspecial tipo ID . pn_currentid bracket PNTCOMMA
    (34) inicializada -> ARR pn_currentspecial tipo ID . pn_currentid bracket asignacioninicialarr
    (42) pn_currentid -> . empty
    (83) empty -> .

    LBRCKT          reduce using rule 83 (empty -> .)

    pn_currentid                   shift and go to state 85
    empty                          shift and go to state 51

state 65

    (32) noinicializada -> MAT pn_currentspecial tipo ID . pn_currentid bracket bracket PNTCOMMA
    (35) inicializada -> MAT pn_currentspecial tipo ID . pn_currentid bracket bracket asignacioninicialmat
    (42) pn_currentid -> . empty
    (83) empty -> .

    LBRCKT          reduce using rule 83 (empty -> .)

    pn_currentid                   shift and go to state 86
    empty                          shift and go to state 51

state 66

    (22) bloque -> LCORCHO bloqueloop . RCORCHO

    RCORCHO         shift and go to state 87


state 67

    (23) bloqueloop -> estatuto . bloqueloop
    (23) bloqueloop -> . estatuto bloqueloop
    (24) bloqueloop -> . empty
    (25) estatuto -> . declarar
    (83) empty -> .
    (26) declarar -> . noinicializada
    (27) declarar -> . inicializada
    (28) declarar -> . CONS pn_currentcons inicializada
    (30) noinicializada -> . tipo ID pn_currentid PNTCOMMA
    (31) noinicializada -> . ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA
    (32) noinicializada -> . MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA
    (33) inicializada -> . tipo ID pn_currentid inicializada_asignacion
    (34) inicializada -> . ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr
    (35) inicializada -> . MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat
    (37) tipo -> . INT pn_currenttype
    (38) tipo -> . FLOAT pn_currenttype
    (39) tipo -> . BOOL pn_currenttype
    (40) tipo -> . STRING pn_currenttype

    RCORCHO         reduce using rule 83 (empty -> .)
    CONS            shift and go to state 14
    ARR             shift and go to state 16
    MAT             shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 21

    estatuto                       shift and go to state 67
    bloqueloop                     shift and go to state 88
    empty                          shift and go to state 68
    declarar                       shift and go to state 69
    noinicializada                 shift and go to state 12
    inicializada                   shift and go to state 13
    tipo                           shift and go to state 15

state 68

    (24) bloqueloop -> empty .

    RCORCHO         reduce using rule 24 (bloqueloop -> empty .)


state 69

    (25) estatuto -> declarar .

    CONS            reduce using rule 25 (estatuto -> declarar .)
    ARR             reduce using rule 25 (estatuto -> declarar .)
    MAT             reduce using rule 25 (estatuto -> declarar .)
    INT             reduce using rule 25 (estatuto -> declarar .)
    FLOAT           reduce using rule 25 (estatuto -> declarar .)
    BOOL            reduce using rule 25 (estatuto -> declarar .)
    STRING          reduce using rule 25 (estatuto -> declarar .)
    RCORCHO         reduce using rule 25 (estatuto -> declarar .)


state 70

    (8) funcionesloop -> FUNC pn_st_functype ID pn_st_functionid funcparameters . bloque funciones
    (22) bloque -> . LCORCHO bloqueloop RCORCHO

    LCORCHO         shift and go to state 55

    bloque                         shift and go to state 89

state 71

    (15) funcparameters -> LPAREN . funcparametersloop RPAREN
    (16) funcparametersloop -> . pn_parameter tipo ID pn_currentid funcparametersloop
    (17) funcparametersloop -> . COMMA pn_parameter tipo ID pn_currentid funcparametersloop
    (18) funcparametersloop -> . empty
    (19) pn_parameter -> . empty
    (83) empty -> .

    COMMA           shift and go to state 92
    RPAREN          reduce using rule 83 (empty -> .)
    INT             reduce using rule 83 (empty -> .)
    FLOAT           reduce using rule 83 (empty -> .)
    BOOL            reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)

    funcparametersloop             shift and go to state 90
    pn_parameter                   shift and go to state 91
    empty                          shift and go to state 93

state 72

    (33) inicializada -> tipo ID pn_currentid . inicializada_asignacion
    (46) inicializada_asignacion -> . EQUALS expresion PNTCOMMA

    EQUALS          shift and go to state 63

    inicializada_asignacion        shift and go to state 62

state 73

    (34) inicializada -> ARR pn_currentspecial tipo . ID pn_currentid bracket asignacioninicialarr

    ID              shift and go to state 94


state 74

    (35) inicializada -> MAT pn_currentspecial tipo . ID pn_currentid bracket bracket asignacioninicialmat

    ID              shift and go to state 95


state 75

    (46) inicializada_asignacion -> EQUALS expresion . PNTCOMMA

    PNTCOMMA        shift and go to state 96


state 76

    (52) expresion -> exp . expresionrelacional
    (53) expresionrelacional -> . GREATER exp
    (54) expresionrelacional -> . LOWER exp
    (55) expresionrelacional -> . SAME exp
    (56) expresionrelacional -> . LEQUAL exp
    (57) expresionrelacional -> . GEQUAL exp
    (58) expresionrelacional -> . NOTEQUAL exp
    (59) expresionrelacional -> . AND exp
    (60) expresionrelacional -> . OR exp
    (61) expresionrelacional -> . empty
    (83) empty -> .

    GREATER         shift and go to state 98
    LOWER           shift and go to state 99
    SAME            shift and go to state 100
    LEQUAL          shift and go to state 101
    GEQUAL          shift and go to state 102
    NOTEQUAL        shift and go to state 103
    AND             shift and go to state 104
    OR              shift and go to state 105
    PNTCOMMA        reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    RBRCKT          reduce using rule 83 (empty -> .)

    expresionrelacional            shift and go to state 97
    empty                          shift and go to state 106

state 77

    (62) exp -> termino . pn_quadruples_checksumres expsumres
    (66) pn_quadruples_checksumres -> . empty
    (83) empty -> .

    PLUS            reduce using rule 83 (empty -> .)
    MINUS           reduce using rule 83 (empty -> .)
    GREATER         reduce using rule 83 (empty -> .)
    LOWER           reduce using rule 83 (empty -> .)
    SAME            reduce using rule 83 (empty -> .)
    LEQUAL          reduce using rule 83 (empty -> .)
    GEQUAL          reduce using rule 83 (empty -> .)
    NOTEQUAL        reduce using rule 83 (empty -> .)
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    PNTCOMMA        reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    RBRCKT          reduce using rule 83 (empty -> .)

    pn_quadruples_checksumres      shift and go to state 107
    empty                          shift and go to state 108

state 78

    (68) termino -> factor . pn_quadruples_checkmuldiv terminomuldiv
    (72) pn_quadruples_checkmuldiv -> . empty
    (83) empty -> .

    TIMES           reduce using rule 83 (empty -> .)
    DIVIDE          reduce using rule 83 (empty -> .)
    PLUS            reduce using rule 83 (empty -> .)
    MINUS           reduce using rule 83 (empty -> .)
    GREATER         reduce using rule 83 (empty -> .)
    LOWER           reduce using rule 83 (empty -> .)
    SAME            reduce using rule 83 (empty -> .)
    LEQUAL          reduce using rule 83 (empty -> .)
    GEQUAL          reduce using rule 83 (empty -> .)
    NOTEQUAL        reduce using rule 83 (empty -> .)
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    PNTCOMMA        reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    RBRCKT          reduce using rule 83 (empty -> .)

    pn_quadruples_checkmuldiv      shift and go to state 109
    empty                          shift and go to state 110

state 79

    (74) factor -> vardt .

    TIMES           reduce using rule 74 (factor -> vardt .)
    DIVIDE          reduce using rule 74 (factor -> vardt .)
    PLUS            reduce using rule 74 (factor -> vardt .)
    MINUS           reduce using rule 74 (factor -> vardt .)
    GREATER         reduce using rule 74 (factor -> vardt .)
    LOWER           reduce using rule 74 (factor -> vardt .)
    SAME            reduce using rule 74 (factor -> vardt .)
    LEQUAL          reduce using rule 74 (factor -> vardt .)
    GEQUAL          reduce using rule 74 (factor -> vardt .)
    NOTEQUAL        reduce using rule 74 (factor -> vardt .)
    AND             reduce using rule 74 (factor -> vardt .)
    OR              reduce using rule 74 (factor -> vardt .)
    PNTCOMMA        reduce using rule 74 (factor -> vardt .)
    COMMA           reduce using rule 74 (factor -> vardt .)
    RBRCKT          reduce using rule 74 (factor -> vardt .)


state 80

    (75) vardt -> ID . pn_quadruples_getvariable
    (80) vardt -> ID . bracket
    (81) vardt -> ID . bracket bracket
    (82) pn_quadruples_getvariable -> . empty
    (43) bracket -> . LBRCKT DTI RBRCKT
    (44) bracket -> . LBRCKT ID RBRCKT
    (83) empty -> .

    LBRCKT          shift and go to state 114
    TIMES           reduce using rule 83 (empty -> .)
    DIVIDE          reduce using rule 83 (empty -> .)
    PLUS            reduce using rule 83 (empty -> .)
    MINUS           reduce using rule 83 (empty -> .)
    GREATER         reduce using rule 83 (empty -> .)
    LOWER           reduce using rule 83 (empty -> .)
    SAME            reduce using rule 83 (empty -> .)
    LEQUAL          reduce using rule 83 (empty -> .)
    GEQUAL          reduce using rule 83 (empty -> .)
    NOTEQUAL        reduce using rule 83 (empty -> .)
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    PNTCOMMA        reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    RBRCKT          reduce using rule 83 (empty -> .)

    pn_quadruples_getvariable      shift and go to state 111
    bracket                        shift and go to state 112
    empty                          shift and go to state 113

state 81

    (76) vardt -> DTI .

    TIMES           reduce using rule 76 (vardt -> DTI .)
    DIVIDE          reduce using rule 76 (vardt -> DTI .)
    PLUS            reduce using rule 76 (vardt -> DTI .)
    MINUS           reduce using rule 76 (vardt -> DTI .)
    GREATER         reduce using rule 76 (vardt -> DTI .)
    LOWER           reduce using rule 76 (vardt -> DTI .)
    SAME            reduce using rule 76 (vardt -> DTI .)
    LEQUAL          reduce using rule 76 (vardt -> DTI .)
    GEQUAL          reduce using rule 76 (vardt -> DTI .)
    NOTEQUAL        reduce using rule 76 (vardt -> DTI .)
    AND             reduce using rule 76 (vardt -> DTI .)
    OR              reduce using rule 76 (vardt -> DTI .)
    PNTCOMMA        reduce using rule 76 (vardt -> DTI .)
    COMMA           reduce using rule 76 (vardt -> DTI .)
    RBRCKT          reduce using rule 76 (vardt -> DTI .)


state 82

    (77) vardt -> DTF .

    TIMES           reduce using rule 77 (vardt -> DTF .)
    DIVIDE          reduce using rule 77 (vardt -> DTF .)
    PLUS            reduce using rule 77 (vardt -> DTF .)
    MINUS           reduce using rule 77 (vardt -> DTF .)
    GREATER         reduce using rule 77 (vardt -> DTF .)
    LOWER           reduce using rule 77 (vardt -> DTF .)
    SAME            reduce using rule 77 (vardt -> DTF .)
    LEQUAL          reduce using rule 77 (vardt -> DTF .)
    GEQUAL          reduce using rule 77 (vardt -> DTF .)
    NOTEQUAL        reduce using rule 77 (vardt -> DTF .)
    AND             reduce using rule 77 (vardt -> DTF .)
    OR              reduce using rule 77 (vardt -> DTF .)
    PNTCOMMA        reduce using rule 77 (vardt -> DTF .)
    COMMA           reduce using rule 77 (vardt -> DTF .)
    RBRCKT          reduce using rule 77 (vardt -> DTF .)


state 83

    (78) vardt -> DTB .

    TIMES           reduce using rule 78 (vardt -> DTB .)
    DIVIDE          reduce using rule 78 (vardt -> DTB .)
    PLUS            reduce using rule 78 (vardt -> DTB .)
    MINUS           reduce using rule 78 (vardt -> DTB .)
    GREATER         reduce using rule 78 (vardt -> DTB .)
    LOWER           reduce using rule 78 (vardt -> DTB .)
    SAME            reduce using rule 78 (vardt -> DTB .)
    LEQUAL          reduce using rule 78 (vardt -> DTB .)
    GEQUAL          reduce using rule 78 (vardt -> DTB .)
    NOTEQUAL        reduce using rule 78 (vardt -> DTB .)
    AND             reduce using rule 78 (vardt -> DTB .)
    OR              reduce using rule 78 (vardt -> DTB .)
    PNTCOMMA        reduce using rule 78 (vardt -> DTB .)
    COMMA           reduce using rule 78 (vardt -> DTB .)
    RBRCKT          reduce using rule 78 (vardt -> DTB .)


state 84

    (79) vardt -> DTS .

    TIMES           reduce using rule 79 (vardt -> DTS .)
    DIVIDE          reduce using rule 79 (vardt -> DTS .)
    PLUS            reduce using rule 79 (vardt -> DTS .)
    MINUS           reduce using rule 79 (vardt -> DTS .)
    GREATER         reduce using rule 79 (vardt -> DTS .)
    LOWER           reduce using rule 79 (vardt -> DTS .)
    SAME            reduce using rule 79 (vardt -> DTS .)
    LEQUAL          reduce using rule 79 (vardt -> DTS .)
    GEQUAL          reduce using rule 79 (vardt -> DTS .)
    NOTEQUAL        reduce using rule 79 (vardt -> DTS .)
    AND             reduce using rule 79 (vardt -> DTS .)
    OR              reduce using rule 79 (vardt -> DTS .)
    PNTCOMMA        reduce using rule 79 (vardt -> DTS .)
    COMMA           reduce using rule 79 (vardt -> DTS .)
    RBRCKT          reduce using rule 79 (vardt -> DTS .)


state 85

    (31) noinicializada -> ARR pn_currentspecial tipo ID pn_currentid . bracket PNTCOMMA
    (34) inicializada -> ARR pn_currentspecial tipo ID pn_currentid . bracket asignacioninicialarr
    (43) bracket -> . LBRCKT DTI RBRCKT
    (44) bracket -> . LBRCKT ID RBRCKT

    LBRCKT          shift and go to state 114

    bracket                        shift and go to state 115

state 86

    (32) noinicializada -> MAT pn_currentspecial tipo ID pn_currentid . bracket bracket PNTCOMMA
    (35) inicializada -> MAT pn_currentspecial tipo ID pn_currentid . bracket bracket asignacioninicialmat
    (43) bracket -> . LBRCKT DTI RBRCKT
    (44) bracket -> . LBRCKT ID RBRCKT

    LBRCKT          shift and go to state 114

    bracket                        shift and go to state 116

state 87

    (22) bloque -> LCORCHO bloqueloop RCORCHO .

    END             reduce using rule 22 (bloque -> LCORCHO bloqueloop RCORCHO .)
    FUNC            reduce using rule 22 (bloque -> LCORCHO bloqueloop RCORCHO .)
    MAIN            reduce using rule 22 (bloque -> LCORCHO bloqueloop RCORCHO .)


state 88

    (23) bloqueloop -> estatuto bloqueloop .

    RCORCHO         reduce using rule 23 (bloqueloop -> estatuto bloqueloop .)


state 89

    (8) funcionesloop -> FUNC pn_st_functype ID pn_st_functionid funcparameters bloque . funciones
    (6) funciones -> . funcionesloop
    (7) funciones -> . empty
    (8) funcionesloop -> . FUNC pn_st_functype ID pn_st_functionid funcparameters bloque funciones
    (83) empty -> .

    FUNC            shift and go to state 8
    MAIN            reduce using rule 83 (empty -> .)

    funciones                      shift and go to state 117
    funcionesloop                  shift and go to state 6
    empty                          shift and go to state 7

state 90

    (15) funcparameters -> LPAREN funcparametersloop . RPAREN

    RPAREN          shift and go to state 118


state 91

    (16) funcparametersloop -> pn_parameter . tipo ID pn_currentid funcparametersloop
    (37) tipo -> . INT pn_currenttype
    (38) tipo -> . FLOAT pn_currenttype
    (39) tipo -> . BOOL pn_currenttype
    (40) tipo -> . STRING pn_currenttype

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 21

    tipo                           shift and go to state 119

state 92

    (17) funcparametersloop -> COMMA . pn_parameter tipo ID pn_currentid funcparametersloop
    (19) pn_parameter -> . empty
    (83) empty -> .

    INT             reduce using rule 83 (empty -> .)
    FLOAT           reduce using rule 83 (empty -> .)
    BOOL            reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)

    pn_parameter                   shift and go to state 120
    empty                          shift and go to state 121

state 93

    (18) funcparametersloop -> empty .
    (19) pn_parameter -> empty .

    RPAREN          reduce using rule 18 (funcparametersloop -> empty .)
    INT             reduce using rule 19 (pn_parameter -> empty .)
    FLOAT           reduce using rule 19 (pn_parameter -> empty .)
    BOOL            reduce using rule 19 (pn_parameter -> empty .)
    STRING          reduce using rule 19 (pn_parameter -> empty .)


state 94

    (34) inicializada -> ARR pn_currentspecial tipo ID . pn_currentid bracket asignacioninicialarr
    (42) pn_currentid -> . empty
    (83) empty -> .

    LBRCKT          reduce using rule 83 (empty -> .)

    pn_currentid                   shift and go to state 122
    empty                          shift and go to state 51

state 95

    (35) inicializada -> MAT pn_currentspecial tipo ID . pn_currentid bracket bracket asignacioninicialmat
    (42) pn_currentid -> . empty
    (83) empty -> .

    LBRCKT          reduce using rule 83 (empty -> .)

    pn_currentid                   shift and go to state 123
    empty                          shift and go to state 51

state 96

    (46) inicializada_asignacion -> EQUALS expresion PNTCOMMA .

    CONS            reduce using rule 46 (inicializada_asignacion -> EQUALS expresion PNTCOMMA .)
    ARR             reduce using rule 46 (inicializada_asignacion -> EQUALS expresion PNTCOMMA .)
    MAT             reduce using rule 46 (inicializada_asignacion -> EQUALS expresion PNTCOMMA .)
    INT             reduce using rule 46 (inicializada_asignacion -> EQUALS expresion PNTCOMMA .)
    FLOAT           reduce using rule 46 (inicializada_asignacion -> EQUALS expresion PNTCOMMA .)
    BOOL            reduce using rule 46 (inicializada_asignacion -> EQUALS expresion PNTCOMMA .)
    STRING          reduce using rule 46 (inicializada_asignacion -> EQUALS expresion PNTCOMMA .)
    FUNC            reduce using rule 46 (inicializada_asignacion -> EQUALS expresion PNTCOMMA .)
    MAIN            reduce using rule 46 (inicializada_asignacion -> EQUALS expresion PNTCOMMA .)
    RCORCHO         reduce using rule 46 (inicializada_asignacion -> EQUALS expresion PNTCOMMA .)


state 97

    (52) expresion -> exp expresionrelacional .

    PNTCOMMA        reduce using rule 52 (expresion -> exp expresionrelacional .)
    COMMA           reduce using rule 52 (expresion -> exp expresionrelacional .)
    RBRCKT          reduce using rule 52 (expresion -> exp expresionrelacional .)


state 98

    (53) expresionrelacional -> GREATER . exp
    (62) exp -> . termino pn_quadruples_checksumres expsumres
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    exp                            shift and go to state 124
    termino                        shift and go to state 77
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 99

    (54) expresionrelacional -> LOWER . exp
    (62) exp -> . termino pn_quadruples_checksumres expsumres
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    exp                            shift and go to state 125
    termino                        shift and go to state 77
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 100

    (55) expresionrelacional -> SAME . exp
    (62) exp -> . termino pn_quadruples_checksumres expsumres
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    exp                            shift and go to state 126
    termino                        shift and go to state 77
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 101

    (56) expresionrelacional -> LEQUAL . exp
    (62) exp -> . termino pn_quadruples_checksumres expsumres
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    exp                            shift and go to state 127
    termino                        shift and go to state 77
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 102

    (57) expresionrelacional -> GEQUAL . exp
    (62) exp -> . termino pn_quadruples_checksumres expsumres
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    exp                            shift and go to state 128
    termino                        shift and go to state 77
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 103

    (58) expresionrelacional -> NOTEQUAL . exp
    (62) exp -> . termino pn_quadruples_checksumres expsumres
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    exp                            shift and go to state 129
    termino                        shift and go to state 77
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 104

    (59) expresionrelacional -> AND . exp
    (62) exp -> . termino pn_quadruples_checksumres expsumres
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    exp                            shift and go to state 130
    termino                        shift and go to state 77
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 105

    (60) expresionrelacional -> OR . exp
    (62) exp -> . termino pn_quadruples_checksumres expsumres
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    exp                            shift and go to state 131
    termino                        shift and go to state 77
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 106

    (61) expresionrelacional -> empty .

    PNTCOMMA        reduce using rule 61 (expresionrelacional -> empty .)
    COMMA           reduce using rule 61 (expresionrelacional -> empty .)
    RBRCKT          reduce using rule 61 (expresionrelacional -> empty .)


state 107

    (62) exp -> termino pn_quadruples_checksumres . expsumres
    (63) expsumres -> . PLUS pn_quadruples_addsumres exp
    (64) expsumres -> . MINUS pn_quadruples_addsumres exp
    (65) expsumres -> . empty
    (83) empty -> .

    PLUS            shift and go to state 133
    MINUS           shift and go to state 134
    GREATER         reduce using rule 83 (empty -> .)
    LOWER           reduce using rule 83 (empty -> .)
    SAME            reduce using rule 83 (empty -> .)
    LEQUAL          reduce using rule 83 (empty -> .)
    GEQUAL          reduce using rule 83 (empty -> .)
    NOTEQUAL        reduce using rule 83 (empty -> .)
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    PNTCOMMA        reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    RBRCKT          reduce using rule 83 (empty -> .)

    expsumres                      shift and go to state 132
    empty                          shift and go to state 135

state 108

    (66) pn_quadruples_checksumres -> empty .

    PLUS            reduce using rule 66 (pn_quadruples_checksumres -> empty .)
    MINUS           reduce using rule 66 (pn_quadruples_checksumres -> empty .)
    GREATER         reduce using rule 66 (pn_quadruples_checksumres -> empty .)
    LOWER           reduce using rule 66 (pn_quadruples_checksumres -> empty .)
    SAME            reduce using rule 66 (pn_quadruples_checksumres -> empty .)
    LEQUAL          reduce using rule 66 (pn_quadruples_checksumres -> empty .)
    GEQUAL          reduce using rule 66 (pn_quadruples_checksumres -> empty .)
    NOTEQUAL        reduce using rule 66 (pn_quadruples_checksumres -> empty .)
    AND             reduce using rule 66 (pn_quadruples_checksumres -> empty .)
    OR              reduce using rule 66 (pn_quadruples_checksumres -> empty .)
    PNTCOMMA        reduce using rule 66 (pn_quadruples_checksumres -> empty .)
    COMMA           reduce using rule 66 (pn_quadruples_checksumres -> empty .)
    RBRCKT          reduce using rule 66 (pn_quadruples_checksumres -> empty .)


state 109

    (68) termino -> factor pn_quadruples_checkmuldiv . terminomuldiv
    (69) terminomuldiv -> . TIMES pn_quadruples_addmuldiv termino
    (70) terminomuldiv -> . DIVIDE pn_quadruples_addmuldiv termino
    (71) terminomuldiv -> . empty
    (83) empty -> .

    TIMES           shift and go to state 137
    DIVIDE          shift and go to state 138
    PLUS            reduce using rule 83 (empty -> .)
    MINUS           reduce using rule 83 (empty -> .)
    GREATER         reduce using rule 83 (empty -> .)
    LOWER           reduce using rule 83 (empty -> .)
    SAME            reduce using rule 83 (empty -> .)
    LEQUAL          reduce using rule 83 (empty -> .)
    GEQUAL          reduce using rule 83 (empty -> .)
    NOTEQUAL        reduce using rule 83 (empty -> .)
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    PNTCOMMA        reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    RBRCKT          reduce using rule 83 (empty -> .)

    terminomuldiv                  shift and go to state 136
    empty                          shift and go to state 139

state 110

    (72) pn_quadruples_checkmuldiv -> empty .

    TIMES           reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    DIVIDE          reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    PLUS            reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    MINUS           reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    GREATER         reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    LOWER           reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    SAME            reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    LEQUAL          reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    GEQUAL          reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    NOTEQUAL        reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    AND             reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    OR              reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    PNTCOMMA        reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    COMMA           reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)
    RBRCKT          reduce using rule 72 (pn_quadruples_checkmuldiv -> empty .)


state 111

    (75) vardt -> ID pn_quadruples_getvariable .

    TIMES           reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    DIVIDE          reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    PLUS            reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    MINUS           reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    GREATER         reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    LOWER           reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    SAME            reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    LEQUAL          reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    GEQUAL          reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    NOTEQUAL        reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    AND             reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    OR              reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    PNTCOMMA        reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    COMMA           reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)
    RBRCKT          reduce using rule 75 (vardt -> ID pn_quadruples_getvariable .)


state 112

    (80) vardt -> ID bracket .
    (81) vardt -> ID bracket . bracket
    (43) bracket -> . LBRCKT DTI RBRCKT
    (44) bracket -> . LBRCKT ID RBRCKT

    TIMES           reduce using rule 80 (vardt -> ID bracket .)
    DIVIDE          reduce using rule 80 (vardt -> ID bracket .)
    PLUS            reduce using rule 80 (vardt -> ID bracket .)
    MINUS           reduce using rule 80 (vardt -> ID bracket .)
    GREATER         reduce using rule 80 (vardt -> ID bracket .)
    LOWER           reduce using rule 80 (vardt -> ID bracket .)
    SAME            reduce using rule 80 (vardt -> ID bracket .)
    LEQUAL          reduce using rule 80 (vardt -> ID bracket .)
    GEQUAL          reduce using rule 80 (vardt -> ID bracket .)
    NOTEQUAL        reduce using rule 80 (vardt -> ID bracket .)
    AND             reduce using rule 80 (vardt -> ID bracket .)
    OR              reduce using rule 80 (vardt -> ID bracket .)
    PNTCOMMA        reduce using rule 80 (vardt -> ID bracket .)
    COMMA           reduce using rule 80 (vardt -> ID bracket .)
    RBRCKT          reduce using rule 80 (vardt -> ID bracket .)
    LBRCKT          shift and go to state 114

    bracket                        shift and go to state 140

state 113

    (82) pn_quadruples_getvariable -> empty .

    TIMES           reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    DIVIDE          reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    PLUS            reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    MINUS           reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    GREATER         reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    LOWER           reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    SAME            reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    LEQUAL          reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    GEQUAL          reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    NOTEQUAL        reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    AND             reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    OR              reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    PNTCOMMA        reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    COMMA           reduce using rule 82 (pn_quadruples_getvariable -> empty .)
    RBRCKT          reduce using rule 82 (pn_quadruples_getvariable -> empty .)


state 114

    (43) bracket -> LBRCKT . DTI RBRCKT
    (44) bracket -> LBRCKT . ID RBRCKT

    DTI             shift and go to state 141
    ID              shift and go to state 142


state 115

    (31) noinicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket . PNTCOMMA
    (34) inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket . asignacioninicialarr
    (47) asignacioninicialarr -> . EQUALS looparreglo PNTCOMMA

    PNTCOMMA        shift and go to state 143
    EQUALS          shift and go to state 145

    asignacioninicialarr           shift and go to state 144

state 116

    (32) noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket . bracket PNTCOMMA
    (35) inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket . bracket asignacioninicialmat
    (43) bracket -> . LBRCKT DTI RBRCKT
    (44) bracket -> . LBRCKT ID RBRCKT

    LBRCKT          shift and go to state 114

    bracket                        shift and go to state 146

state 117

    (8) funcionesloop -> FUNC pn_st_functype ID pn_st_functionid funcparameters bloque funciones .

    MAIN            reduce using rule 8 (funcionesloop -> FUNC pn_st_functype ID pn_st_functionid funcparameters bloque funciones .)


state 118

    (15) funcparameters -> LPAREN funcparametersloop RPAREN .

    LCORCHO         reduce using rule 15 (funcparameters -> LPAREN funcparametersloop RPAREN .)


state 119

    (16) funcparametersloop -> pn_parameter tipo . ID pn_currentid funcparametersloop

    ID              shift and go to state 147


state 120

    (17) funcparametersloop -> COMMA pn_parameter . tipo ID pn_currentid funcparametersloop
    (37) tipo -> . INT pn_currenttype
    (38) tipo -> . FLOAT pn_currenttype
    (39) tipo -> . BOOL pn_currenttype
    (40) tipo -> . STRING pn_currenttype

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    BOOL            shift and go to state 20
    STRING          shift and go to state 21

    tipo                           shift and go to state 148

state 121

    (19) pn_parameter -> empty .

    INT             reduce using rule 19 (pn_parameter -> empty .)
    FLOAT           reduce using rule 19 (pn_parameter -> empty .)
    BOOL            reduce using rule 19 (pn_parameter -> empty .)
    STRING          reduce using rule 19 (pn_parameter -> empty .)


state 122

    (34) inicializada -> ARR pn_currentspecial tipo ID pn_currentid . bracket asignacioninicialarr
    (43) bracket -> . LBRCKT DTI RBRCKT
    (44) bracket -> . LBRCKT ID RBRCKT

    LBRCKT          shift and go to state 114

    bracket                        shift and go to state 149

state 123

    (35) inicializada -> MAT pn_currentspecial tipo ID pn_currentid . bracket bracket asignacioninicialmat
    (43) bracket -> . LBRCKT DTI RBRCKT
    (44) bracket -> . LBRCKT ID RBRCKT

    LBRCKT          shift and go to state 114

    bracket                        shift and go to state 150

state 124

    (53) expresionrelacional -> GREATER exp .

    PNTCOMMA        reduce using rule 53 (expresionrelacional -> GREATER exp .)
    COMMA           reduce using rule 53 (expresionrelacional -> GREATER exp .)
    RBRCKT          reduce using rule 53 (expresionrelacional -> GREATER exp .)


state 125

    (54) expresionrelacional -> LOWER exp .

    PNTCOMMA        reduce using rule 54 (expresionrelacional -> LOWER exp .)
    COMMA           reduce using rule 54 (expresionrelacional -> LOWER exp .)
    RBRCKT          reduce using rule 54 (expresionrelacional -> LOWER exp .)


state 126

    (55) expresionrelacional -> SAME exp .

    PNTCOMMA        reduce using rule 55 (expresionrelacional -> SAME exp .)
    COMMA           reduce using rule 55 (expresionrelacional -> SAME exp .)
    RBRCKT          reduce using rule 55 (expresionrelacional -> SAME exp .)


state 127

    (56) expresionrelacional -> LEQUAL exp .

    PNTCOMMA        reduce using rule 56 (expresionrelacional -> LEQUAL exp .)
    COMMA           reduce using rule 56 (expresionrelacional -> LEQUAL exp .)
    RBRCKT          reduce using rule 56 (expresionrelacional -> LEQUAL exp .)


state 128

    (57) expresionrelacional -> GEQUAL exp .

    PNTCOMMA        reduce using rule 57 (expresionrelacional -> GEQUAL exp .)
    COMMA           reduce using rule 57 (expresionrelacional -> GEQUAL exp .)
    RBRCKT          reduce using rule 57 (expresionrelacional -> GEQUAL exp .)


state 129

    (58) expresionrelacional -> NOTEQUAL exp .

    PNTCOMMA        reduce using rule 58 (expresionrelacional -> NOTEQUAL exp .)
    COMMA           reduce using rule 58 (expresionrelacional -> NOTEQUAL exp .)
    RBRCKT          reduce using rule 58 (expresionrelacional -> NOTEQUAL exp .)


state 130

    (59) expresionrelacional -> AND exp .

    PNTCOMMA        reduce using rule 59 (expresionrelacional -> AND exp .)
    COMMA           reduce using rule 59 (expresionrelacional -> AND exp .)
    RBRCKT          reduce using rule 59 (expresionrelacional -> AND exp .)


state 131

    (60) expresionrelacional -> OR exp .

    PNTCOMMA        reduce using rule 60 (expresionrelacional -> OR exp .)
    COMMA           reduce using rule 60 (expresionrelacional -> OR exp .)
    RBRCKT          reduce using rule 60 (expresionrelacional -> OR exp .)


state 132

    (62) exp -> termino pn_quadruples_checksumres expsumres .

    GREATER         reduce using rule 62 (exp -> termino pn_quadruples_checksumres expsumres .)
    LOWER           reduce using rule 62 (exp -> termino pn_quadruples_checksumres expsumres .)
    SAME            reduce using rule 62 (exp -> termino pn_quadruples_checksumres expsumres .)
    LEQUAL          reduce using rule 62 (exp -> termino pn_quadruples_checksumres expsumres .)
    GEQUAL          reduce using rule 62 (exp -> termino pn_quadruples_checksumres expsumres .)
    NOTEQUAL        reduce using rule 62 (exp -> termino pn_quadruples_checksumres expsumres .)
    AND             reduce using rule 62 (exp -> termino pn_quadruples_checksumres expsumres .)
    OR              reduce using rule 62 (exp -> termino pn_quadruples_checksumres expsumres .)
    PNTCOMMA        reduce using rule 62 (exp -> termino pn_quadruples_checksumres expsumres .)
    COMMA           reduce using rule 62 (exp -> termino pn_quadruples_checksumres expsumres .)
    RBRCKT          reduce using rule 62 (exp -> termino pn_quadruples_checksumres expsumres .)


state 133

    (63) expsumres -> PLUS . pn_quadruples_addsumres exp
    (67) pn_quadruples_addsumres -> . empty
    (83) empty -> .

    ID              reduce using rule 83 (empty -> .)
    DTI             reduce using rule 83 (empty -> .)
    DTF             reduce using rule 83 (empty -> .)
    DTB             reduce using rule 83 (empty -> .)
    DTS             reduce using rule 83 (empty -> .)

    pn_quadruples_addsumres        shift and go to state 151
    empty                          shift and go to state 152

state 134

    (64) expsumres -> MINUS . pn_quadruples_addsumres exp
    (67) pn_quadruples_addsumres -> . empty
    (83) empty -> .

    ID              reduce using rule 83 (empty -> .)
    DTI             reduce using rule 83 (empty -> .)
    DTF             reduce using rule 83 (empty -> .)
    DTB             reduce using rule 83 (empty -> .)
    DTS             reduce using rule 83 (empty -> .)

    pn_quadruples_addsumres        shift and go to state 153
    empty                          shift and go to state 152

state 135

    (65) expsumres -> empty .

    GREATER         reduce using rule 65 (expsumres -> empty .)
    LOWER           reduce using rule 65 (expsumres -> empty .)
    SAME            reduce using rule 65 (expsumres -> empty .)
    LEQUAL          reduce using rule 65 (expsumres -> empty .)
    GEQUAL          reduce using rule 65 (expsumres -> empty .)
    NOTEQUAL        reduce using rule 65 (expsumres -> empty .)
    AND             reduce using rule 65 (expsumres -> empty .)
    OR              reduce using rule 65 (expsumres -> empty .)
    PNTCOMMA        reduce using rule 65 (expsumres -> empty .)
    COMMA           reduce using rule 65 (expsumres -> empty .)
    RBRCKT          reduce using rule 65 (expsumres -> empty .)


state 136

    (68) termino -> factor pn_quadruples_checkmuldiv terminomuldiv .

    PLUS            reduce using rule 68 (termino -> factor pn_quadruples_checkmuldiv terminomuldiv .)
    MINUS           reduce using rule 68 (termino -> factor pn_quadruples_checkmuldiv terminomuldiv .)
    GREATER         reduce using rule 68 (termino -> factor pn_quadruples_checkmuldiv terminomuldiv .)
    LOWER           reduce using rule 68 (termino -> factor pn_quadruples_checkmuldiv terminomuldiv .)
    SAME            reduce using rule 68 (termino -> factor pn_quadruples_checkmuldiv terminomuldiv .)
    LEQUAL          reduce using rule 68 (termino -> factor pn_quadruples_checkmuldiv terminomuldiv .)
    GEQUAL          reduce using rule 68 (termino -> factor pn_quadruples_checkmuldiv terminomuldiv .)
    NOTEQUAL        reduce using rule 68 (termino -> factor pn_quadruples_checkmuldiv terminomuldiv .)
    AND             reduce using rule 68 (termino -> factor pn_quadruples_checkmuldiv terminomuldiv .)
    OR              reduce using rule 68 (termino -> factor pn_quadruples_checkmuldiv terminomuldiv .)
    PNTCOMMA        reduce using rule 68 (termino -> factor pn_quadruples_checkmuldiv terminomuldiv .)
    COMMA           reduce using rule 68 (termino -> factor pn_quadruples_checkmuldiv terminomuldiv .)
    RBRCKT          reduce using rule 68 (termino -> factor pn_quadruples_checkmuldiv terminomuldiv .)


state 137

    (69) terminomuldiv -> TIMES . pn_quadruples_addmuldiv termino
    (73) pn_quadruples_addmuldiv -> . empty
    (83) empty -> .

    ID              reduce using rule 83 (empty -> .)
    DTI             reduce using rule 83 (empty -> .)
    DTF             reduce using rule 83 (empty -> .)
    DTB             reduce using rule 83 (empty -> .)
    DTS             reduce using rule 83 (empty -> .)

    pn_quadruples_addmuldiv        shift and go to state 154
    empty                          shift and go to state 155

state 138

    (70) terminomuldiv -> DIVIDE . pn_quadruples_addmuldiv termino
    (73) pn_quadruples_addmuldiv -> . empty
    (83) empty -> .

    ID              reduce using rule 83 (empty -> .)
    DTI             reduce using rule 83 (empty -> .)
    DTF             reduce using rule 83 (empty -> .)
    DTB             reduce using rule 83 (empty -> .)
    DTS             reduce using rule 83 (empty -> .)

    pn_quadruples_addmuldiv        shift and go to state 156
    empty                          shift and go to state 155

state 139

    (71) terminomuldiv -> empty .

    PLUS            reduce using rule 71 (terminomuldiv -> empty .)
    MINUS           reduce using rule 71 (terminomuldiv -> empty .)
    GREATER         reduce using rule 71 (terminomuldiv -> empty .)
    LOWER           reduce using rule 71 (terminomuldiv -> empty .)
    SAME            reduce using rule 71 (terminomuldiv -> empty .)
    LEQUAL          reduce using rule 71 (terminomuldiv -> empty .)
    GEQUAL          reduce using rule 71 (terminomuldiv -> empty .)
    NOTEQUAL        reduce using rule 71 (terminomuldiv -> empty .)
    AND             reduce using rule 71 (terminomuldiv -> empty .)
    OR              reduce using rule 71 (terminomuldiv -> empty .)
    PNTCOMMA        reduce using rule 71 (terminomuldiv -> empty .)
    COMMA           reduce using rule 71 (terminomuldiv -> empty .)
    RBRCKT          reduce using rule 71 (terminomuldiv -> empty .)


state 140

    (81) vardt -> ID bracket bracket .

    TIMES           reduce using rule 81 (vardt -> ID bracket bracket .)
    DIVIDE          reduce using rule 81 (vardt -> ID bracket bracket .)
    PLUS            reduce using rule 81 (vardt -> ID bracket bracket .)
    MINUS           reduce using rule 81 (vardt -> ID bracket bracket .)
    GREATER         reduce using rule 81 (vardt -> ID bracket bracket .)
    LOWER           reduce using rule 81 (vardt -> ID bracket bracket .)
    SAME            reduce using rule 81 (vardt -> ID bracket bracket .)
    LEQUAL          reduce using rule 81 (vardt -> ID bracket bracket .)
    GEQUAL          reduce using rule 81 (vardt -> ID bracket bracket .)
    NOTEQUAL        reduce using rule 81 (vardt -> ID bracket bracket .)
    AND             reduce using rule 81 (vardt -> ID bracket bracket .)
    OR              reduce using rule 81 (vardt -> ID bracket bracket .)
    PNTCOMMA        reduce using rule 81 (vardt -> ID bracket bracket .)
    COMMA           reduce using rule 81 (vardt -> ID bracket bracket .)
    RBRCKT          reduce using rule 81 (vardt -> ID bracket bracket .)


state 141

    (43) bracket -> LBRCKT DTI . RBRCKT

    RBRCKT          shift and go to state 157


state 142

    (44) bracket -> LBRCKT ID . RBRCKT

    RBRCKT          shift and go to state 158


state 143

    (31) noinicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA .

    CONS            reduce using rule 31 (noinicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA .)
    ARR             reduce using rule 31 (noinicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA .)
    MAT             reduce using rule 31 (noinicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA .)
    INT             reduce using rule 31 (noinicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA .)
    FLOAT           reduce using rule 31 (noinicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA .)
    BOOL            reduce using rule 31 (noinicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA .)
    STRING          reduce using rule 31 (noinicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA .)
    FUNC            reduce using rule 31 (noinicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA .)
    MAIN            reduce using rule 31 (noinicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA .)
    RCORCHO         reduce using rule 31 (noinicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket PNTCOMMA .)


state 144

    (34) inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr .

    CONS            reduce using rule 34 (inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr .)
    ARR             reduce using rule 34 (inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr .)
    MAT             reduce using rule 34 (inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr .)
    INT             reduce using rule 34 (inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr .)
    FLOAT           reduce using rule 34 (inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr .)
    BOOL            reduce using rule 34 (inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr .)
    STRING          reduce using rule 34 (inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr .)
    FUNC            reduce using rule 34 (inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr .)
    MAIN            reduce using rule 34 (inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr .)
    RCORCHO         reduce using rule 34 (inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket asignacioninicialarr .)


state 145

    (47) asignacioninicialarr -> EQUALS . looparreglo PNTCOMMA
    (49) looparreglo -> . LBRCKT expresion expresionloop RBRCKT

    LBRCKT          shift and go to state 160

    looparreglo                    shift and go to state 159

state 146

    (32) noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket . PNTCOMMA
    (35) inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket . asignacioninicialmat
    (48) asignacioninicialmat -> . EQUALS looparreglo looparreglo PNTCOMMA

    PNTCOMMA        shift and go to state 161
    EQUALS          shift and go to state 163

    asignacioninicialmat           shift and go to state 162

state 147

    (16) funcparametersloop -> pn_parameter tipo ID . pn_currentid funcparametersloop
    (42) pn_currentid -> . empty
    (83) empty -> .

    COMMA           reduce using rule 83 (empty -> .)
    INT             reduce using rule 83 (empty -> .)
    FLOAT           reduce using rule 83 (empty -> .)
    BOOL            reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)
    RPAREN          reduce using rule 83 (empty -> .)

    pn_currentid                   shift and go to state 164
    empty                          shift and go to state 51

state 148

    (17) funcparametersloop -> COMMA pn_parameter tipo . ID pn_currentid funcparametersloop

    ID              shift and go to state 165


state 149

    (34) inicializada -> ARR pn_currentspecial tipo ID pn_currentid bracket . asignacioninicialarr
    (47) asignacioninicialarr -> . EQUALS looparreglo PNTCOMMA

    EQUALS          shift and go to state 145

    asignacioninicialarr           shift and go to state 144

state 150

    (35) inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket . bracket asignacioninicialmat
    (43) bracket -> . LBRCKT DTI RBRCKT
    (44) bracket -> . LBRCKT ID RBRCKT

    LBRCKT          shift and go to state 114

    bracket                        shift and go to state 166

state 151

    (63) expsumres -> PLUS pn_quadruples_addsumres . exp
    (62) exp -> . termino pn_quadruples_checksumres expsumres
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    exp                            shift and go to state 167
    termino                        shift and go to state 77
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 152

    (67) pn_quadruples_addsumres -> empty .

    ID              reduce using rule 67 (pn_quadruples_addsumres -> empty .)
    DTI             reduce using rule 67 (pn_quadruples_addsumres -> empty .)
    DTF             reduce using rule 67 (pn_quadruples_addsumres -> empty .)
    DTB             reduce using rule 67 (pn_quadruples_addsumres -> empty .)
    DTS             reduce using rule 67 (pn_quadruples_addsumres -> empty .)


state 153

    (64) expsumres -> MINUS pn_quadruples_addsumres . exp
    (62) exp -> . termino pn_quadruples_checksumres expsumres
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    exp                            shift and go to state 168
    termino                        shift and go to state 77
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 154

    (69) terminomuldiv -> TIMES pn_quadruples_addmuldiv . termino
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    termino                        shift and go to state 169
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 155

    (73) pn_quadruples_addmuldiv -> empty .

    ID              reduce using rule 73 (pn_quadruples_addmuldiv -> empty .)
    DTI             reduce using rule 73 (pn_quadruples_addmuldiv -> empty .)
    DTF             reduce using rule 73 (pn_quadruples_addmuldiv -> empty .)
    DTB             reduce using rule 73 (pn_quadruples_addmuldiv -> empty .)
    DTS             reduce using rule 73 (pn_quadruples_addmuldiv -> empty .)


state 156

    (70) terminomuldiv -> DIVIDE pn_quadruples_addmuldiv . termino
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    termino                        shift and go to state 170
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 157

    (43) bracket -> LBRCKT DTI RBRCKT .

    LBRCKT          reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    TIMES           reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    DIVIDE          reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    PLUS            reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    MINUS           reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    GREATER         reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    LOWER           reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    SAME            reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    LEQUAL          reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    GEQUAL          reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    NOTEQUAL        reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    AND             reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    OR              reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    PNTCOMMA        reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    COMMA           reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    RBRCKT          reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)
    EQUALS          reduce using rule 43 (bracket -> LBRCKT DTI RBRCKT .)


state 158

    (44) bracket -> LBRCKT ID RBRCKT .

    LBRCKT          reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    TIMES           reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    DIVIDE          reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    PLUS            reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    MINUS           reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    GREATER         reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    LOWER           reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    SAME            reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    LEQUAL          reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    GEQUAL          reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    NOTEQUAL        reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    AND             reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    OR              reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    PNTCOMMA        reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    COMMA           reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    RBRCKT          reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)
    EQUALS          reduce using rule 44 (bracket -> LBRCKT ID RBRCKT .)


state 159

    (47) asignacioninicialarr -> EQUALS looparreglo . PNTCOMMA

    PNTCOMMA        shift and go to state 171


state 160

    (49) looparreglo -> LBRCKT . expresion expresionloop RBRCKT
    (52) expresion -> . exp expresionrelacional
    (62) exp -> . termino pn_quadruples_checksumres expsumres
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    expresion                      shift and go to state 172
    exp                            shift and go to state 76
    termino                        shift and go to state 77
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 161

    (32) noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA .

    CONS            reduce using rule 32 (noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA .)
    ARR             reduce using rule 32 (noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA .)
    MAT             reduce using rule 32 (noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA .)
    INT             reduce using rule 32 (noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA .)
    FLOAT           reduce using rule 32 (noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA .)
    BOOL            reduce using rule 32 (noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA .)
    STRING          reduce using rule 32 (noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA .)
    FUNC            reduce using rule 32 (noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA .)
    MAIN            reduce using rule 32 (noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA .)
    RCORCHO         reduce using rule 32 (noinicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket PNTCOMMA .)


state 162

    (35) inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat .

    CONS            reduce using rule 35 (inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat .)
    ARR             reduce using rule 35 (inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat .)
    MAT             reduce using rule 35 (inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat .)
    INT             reduce using rule 35 (inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat .)
    FLOAT           reduce using rule 35 (inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat .)
    BOOL            reduce using rule 35 (inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat .)
    STRING          reduce using rule 35 (inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat .)
    FUNC            reduce using rule 35 (inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat .)
    MAIN            reduce using rule 35 (inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat .)
    RCORCHO         reduce using rule 35 (inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket asignacioninicialmat .)


state 163

    (48) asignacioninicialmat -> EQUALS . looparreglo looparreglo PNTCOMMA
    (49) looparreglo -> . LBRCKT expresion expresionloop RBRCKT

    LBRCKT          shift and go to state 160

    looparreglo                    shift and go to state 173

state 164

    (16) funcparametersloop -> pn_parameter tipo ID pn_currentid . funcparametersloop
    (16) funcparametersloop -> . pn_parameter tipo ID pn_currentid funcparametersloop
    (17) funcparametersloop -> . COMMA pn_parameter tipo ID pn_currentid funcparametersloop
    (18) funcparametersloop -> . empty
    (19) pn_parameter -> . empty
    (83) empty -> .

    COMMA           shift and go to state 92
    RPAREN          reduce using rule 83 (empty -> .)
    INT             reduce using rule 83 (empty -> .)
    FLOAT           reduce using rule 83 (empty -> .)
    BOOL            reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)

    pn_parameter                   shift and go to state 91
    funcparametersloop             shift and go to state 174
    empty                          shift and go to state 93

state 165

    (17) funcparametersloop -> COMMA pn_parameter tipo ID . pn_currentid funcparametersloop
    (42) pn_currentid -> . empty
    (83) empty -> .

    COMMA           reduce using rule 83 (empty -> .)
    INT             reduce using rule 83 (empty -> .)
    FLOAT           reduce using rule 83 (empty -> .)
    BOOL            reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)
    RPAREN          reduce using rule 83 (empty -> .)

    pn_currentid                   shift and go to state 175
    empty                          shift and go to state 51

state 166

    (35) inicializada -> MAT pn_currentspecial tipo ID pn_currentid bracket bracket . asignacioninicialmat
    (48) asignacioninicialmat -> . EQUALS looparreglo looparreglo PNTCOMMA

    EQUALS          shift and go to state 163

    asignacioninicialmat           shift and go to state 162

state 167

    (63) expsumres -> PLUS pn_quadruples_addsumres exp .

    GREATER         reduce using rule 63 (expsumres -> PLUS pn_quadruples_addsumres exp .)
    LOWER           reduce using rule 63 (expsumres -> PLUS pn_quadruples_addsumres exp .)
    SAME            reduce using rule 63 (expsumres -> PLUS pn_quadruples_addsumres exp .)
    LEQUAL          reduce using rule 63 (expsumres -> PLUS pn_quadruples_addsumres exp .)
    GEQUAL          reduce using rule 63 (expsumres -> PLUS pn_quadruples_addsumres exp .)
    NOTEQUAL        reduce using rule 63 (expsumres -> PLUS pn_quadruples_addsumres exp .)
    AND             reduce using rule 63 (expsumres -> PLUS pn_quadruples_addsumres exp .)
    OR              reduce using rule 63 (expsumres -> PLUS pn_quadruples_addsumres exp .)
    PNTCOMMA        reduce using rule 63 (expsumres -> PLUS pn_quadruples_addsumres exp .)
    COMMA           reduce using rule 63 (expsumres -> PLUS pn_quadruples_addsumres exp .)
    RBRCKT          reduce using rule 63 (expsumres -> PLUS pn_quadruples_addsumres exp .)


state 168

    (64) expsumres -> MINUS pn_quadruples_addsumres exp .

    GREATER         reduce using rule 64 (expsumres -> MINUS pn_quadruples_addsumres exp .)
    LOWER           reduce using rule 64 (expsumres -> MINUS pn_quadruples_addsumres exp .)
    SAME            reduce using rule 64 (expsumres -> MINUS pn_quadruples_addsumres exp .)
    LEQUAL          reduce using rule 64 (expsumres -> MINUS pn_quadruples_addsumres exp .)
    GEQUAL          reduce using rule 64 (expsumres -> MINUS pn_quadruples_addsumres exp .)
    NOTEQUAL        reduce using rule 64 (expsumres -> MINUS pn_quadruples_addsumres exp .)
    AND             reduce using rule 64 (expsumres -> MINUS pn_quadruples_addsumres exp .)
    OR              reduce using rule 64 (expsumres -> MINUS pn_quadruples_addsumres exp .)
    PNTCOMMA        reduce using rule 64 (expsumres -> MINUS pn_quadruples_addsumres exp .)
    COMMA           reduce using rule 64 (expsumres -> MINUS pn_quadruples_addsumres exp .)
    RBRCKT          reduce using rule 64 (expsumres -> MINUS pn_quadruples_addsumres exp .)


state 169

    (69) terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .

    PLUS            reduce using rule 69 (terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .)
    MINUS           reduce using rule 69 (terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .)
    GREATER         reduce using rule 69 (terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .)
    LOWER           reduce using rule 69 (terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .)
    SAME            reduce using rule 69 (terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .)
    LEQUAL          reduce using rule 69 (terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .)
    GEQUAL          reduce using rule 69 (terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .)
    NOTEQUAL        reduce using rule 69 (terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .)
    AND             reduce using rule 69 (terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .)
    OR              reduce using rule 69 (terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .)
    PNTCOMMA        reduce using rule 69 (terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .)
    COMMA           reduce using rule 69 (terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .)
    RBRCKT          reduce using rule 69 (terminomuldiv -> TIMES pn_quadruples_addmuldiv termino .)


state 170

    (70) terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .

    PLUS            reduce using rule 70 (terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .)
    MINUS           reduce using rule 70 (terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .)
    GREATER         reduce using rule 70 (terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .)
    LOWER           reduce using rule 70 (terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .)
    SAME            reduce using rule 70 (terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .)
    LEQUAL          reduce using rule 70 (terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .)
    GEQUAL          reduce using rule 70 (terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .)
    NOTEQUAL        reduce using rule 70 (terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .)
    AND             reduce using rule 70 (terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .)
    OR              reduce using rule 70 (terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .)
    PNTCOMMA        reduce using rule 70 (terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .)
    COMMA           reduce using rule 70 (terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .)
    RBRCKT          reduce using rule 70 (terminomuldiv -> DIVIDE pn_quadruples_addmuldiv termino .)


state 171

    (47) asignacioninicialarr -> EQUALS looparreglo PNTCOMMA .

    CONS            reduce using rule 47 (asignacioninicialarr -> EQUALS looparreglo PNTCOMMA .)
    ARR             reduce using rule 47 (asignacioninicialarr -> EQUALS looparreglo PNTCOMMA .)
    MAT             reduce using rule 47 (asignacioninicialarr -> EQUALS looparreglo PNTCOMMA .)
    INT             reduce using rule 47 (asignacioninicialarr -> EQUALS looparreglo PNTCOMMA .)
    FLOAT           reduce using rule 47 (asignacioninicialarr -> EQUALS looparreglo PNTCOMMA .)
    BOOL            reduce using rule 47 (asignacioninicialarr -> EQUALS looparreglo PNTCOMMA .)
    STRING          reduce using rule 47 (asignacioninicialarr -> EQUALS looparreglo PNTCOMMA .)
    FUNC            reduce using rule 47 (asignacioninicialarr -> EQUALS looparreglo PNTCOMMA .)
    MAIN            reduce using rule 47 (asignacioninicialarr -> EQUALS looparreglo PNTCOMMA .)
    RCORCHO         reduce using rule 47 (asignacioninicialarr -> EQUALS looparreglo PNTCOMMA .)


state 172

    (49) looparreglo -> LBRCKT expresion . expresionloop RBRCKT
    (50) expresionloop -> . COMMA expresion expresionloop
    (51) expresionloop -> . empty
    (83) empty -> .

    COMMA           shift and go to state 177
    RBRCKT          reduce using rule 83 (empty -> .)

    expresionloop                  shift and go to state 176
    empty                          shift and go to state 178

state 173

    (48) asignacioninicialmat -> EQUALS looparreglo . looparreglo PNTCOMMA
    (49) looparreglo -> . LBRCKT expresion expresionloop RBRCKT

    LBRCKT          shift and go to state 160

    looparreglo                    shift and go to state 179

state 174

    (16) funcparametersloop -> pn_parameter tipo ID pn_currentid funcparametersloop .

    RPAREN          reduce using rule 16 (funcparametersloop -> pn_parameter tipo ID pn_currentid funcparametersloop .)


state 175

    (17) funcparametersloop -> COMMA pn_parameter tipo ID pn_currentid . funcparametersloop
    (16) funcparametersloop -> . pn_parameter tipo ID pn_currentid funcparametersloop
    (17) funcparametersloop -> . COMMA pn_parameter tipo ID pn_currentid funcparametersloop
    (18) funcparametersloop -> . empty
    (19) pn_parameter -> . empty
    (83) empty -> .

    COMMA           shift and go to state 92
    RPAREN          reduce using rule 83 (empty -> .)
    INT             reduce using rule 83 (empty -> .)
    FLOAT           reduce using rule 83 (empty -> .)
    BOOL            reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)

    pn_parameter                   shift and go to state 91
    funcparametersloop             shift and go to state 180
    empty                          shift and go to state 93

state 176

    (49) looparreglo -> LBRCKT expresion expresionloop . RBRCKT

    RBRCKT          shift and go to state 181


state 177

    (50) expresionloop -> COMMA . expresion expresionloop
    (52) expresion -> . exp expresionrelacional
    (62) exp -> . termino pn_quadruples_checksumres expsumres
    (68) termino -> . factor pn_quadruples_checkmuldiv terminomuldiv
    (74) factor -> . vardt
    (75) vardt -> . ID pn_quadruples_getvariable
    (76) vardt -> . DTI
    (77) vardt -> . DTF
    (78) vardt -> . DTB
    (79) vardt -> . DTS
    (80) vardt -> . ID bracket
    (81) vardt -> . ID bracket bracket

    ID              shift and go to state 80
    DTI             shift and go to state 81
    DTF             shift and go to state 82
    DTB             shift and go to state 83
    DTS             shift and go to state 84

    expresion                      shift and go to state 182
    exp                            shift and go to state 76
    termino                        shift and go to state 77
    factor                         shift and go to state 78
    vardt                          shift and go to state 79

state 178

    (51) expresionloop -> empty .

    RBRCKT          reduce using rule 51 (expresionloop -> empty .)


state 179

    (48) asignacioninicialmat -> EQUALS looparreglo looparreglo . PNTCOMMA

    PNTCOMMA        shift and go to state 183


state 180

    (17) funcparametersloop -> COMMA pn_parameter tipo ID pn_currentid funcparametersloop .

    RPAREN          reduce using rule 17 (funcparametersloop -> COMMA pn_parameter tipo ID pn_currentid funcparametersloop .)


state 181

    (49) looparreglo -> LBRCKT expresion expresionloop RBRCKT .

    PNTCOMMA        reduce using rule 49 (looparreglo -> LBRCKT expresion expresionloop RBRCKT .)
    LBRCKT          reduce using rule 49 (looparreglo -> LBRCKT expresion expresionloop RBRCKT .)


state 182

    (50) expresionloop -> COMMA expresion . expresionloop
    (50) expresionloop -> . COMMA expresion expresionloop
    (51) expresionloop -> . empty
    (83) empty -> .

    COMMA           shift and go to state 177
    RBRCKT          reduce using rule 83 (empty -> .)

    expresionloop                  shift and go to state 184
    empty                          shift and go to state 178

state 183

    (48) asignacioninicialmat -> EQUALS looparreglo looparreglo PNTCOMMA .

    CONS            reduce using rule 48 (asignacioninicialmat -> EQUALS looparreglo looparreglo PNTCOMMA .)
    ARR             reduce using rule 48 (asignacioninicialmat -> EQUALS looparreglo looparreglo PNTCOMMA .)
    MAT             reduce using rule 48 (asignacioninicialmat -> EQUALS looparreglo looparreglo PNTCOMMA .)
    INT             reduce using rule 48 (asignacioninicialmat -> EQUALS looparreglo looparreglo PNTCOMMA .)
    FLOAT           reduce using rule 48 (asignacioninicialmat -> EQUALS looparreglo looparreglo PNTCOMMA .)
    BOOL            reduce using rule 48 (asignacioninicialmat -> EQUALS looparreglo looparreglo PNTCOMMA .)
    STRING          reduce using rule 48 (asignacioninicialmat -> EQUALS looparreglo looparreglo PNTCOMMA .)
    FUNC            reduce using rule 48 (asignacioninicialmat -> EQUALS looparreglo looparreglo PNTCOMMA .)
    MAIN            reduce using rule 48 (asignacioninicialmat -> EQUALS looparreglo looparreglo PNTCOMMA .)
    RCORCHO         reduce using rule 48 (asignacioninicialmat -> EQUALS looparreglo looparreglo PNTCOMMA .)


state 184

    (50) expresionloop -> COMMA expresion expresionloop .

    RBRCKT          reduce using rule 50 (expresionloop -> COMMA expresion expresionloop .)

