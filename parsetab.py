
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARR AVERAGE BOOL BREAK CASE COLON COMMA CONS DIVIDE DO DTB DTF DTI DTS ELSE END EQUALS FALSE FLOAT FOR FUNC GEQUAL GREATER ID IF INT LBRCKT LCORCHO LEQUAL LOWER LPAREN MAIN MAT MEAN MINUS MODE MODULE NOT NOTEQUAL OR PI PLUS PNTCOMMA POINT POWER PRINT RBRCKT RCORCHO RPAREN SAME SQRT STRING SWITCH TIMES TRUE WHILE\n    programa : globales END\n    \n    globales : declarar globales\n             | empty\n    \n    declarar : inicializada\n             | CONS inicializada\n             | noinicializada\n    \n    inicializada : tipo asignacion\n                 | ARR tipo asignacioninicialarr\n                 | MAT tipo asignacioninicialmat\n    \n    noinicializada : tipo ID PNTCOMMA\n                   | ARR tipo ID bracket PNTCOMMA\n                   | MAT tipo ID bracket bracket PNTCOMMA\n    \n    bracket : LBRCKT DTI RBRCKT\n            | LBRCKT ID RBRCKT\n    \n    tipo : INT\n         | FLOAT\n         | BOOL\n         | STRING\n    \n    asignacion : ID EQUALS expresion PNTCOMMA\n    \n    asignacioninicialarr : ID bracket EQUALS looparreglo PNTCOMMA\n    \n    asignacioninicialmat : ID bracket bracket EQUALS looparreglo looparreglo PNTCOMMA\n    \n    looparreglo : LBRCKT expresion expresionloop RBRCKT\n    \n    expresionloop : COMMA expresion expresionloop\n                  | empty\n    \n    expresion : exp expresionrelacional\n    \n    expresionrelacional : GREATER exp\n                        | LOWER exp\n                        | SAME exp\n                        | LEQUAL exp\n                        | GEQUAL exp\n                        | NOTEQUAL exp\n                        | AND exp\n                        | OR exp\n                        | empty\n    \n    exp : termino expsumres\n    \n    expsumres : PLUS termino expsumres\n              | MINUS termino expsumres\n              | empty\n    \n    termino : factor terminomuldiv\n    \n    terminomuldiv : TIMES factor terminomuldiv\n                  | DIVIDE factor terminomuldiv\n                  | empty\n    \n    factor : LPAREN expresion RPAREN\n           | PLUS vardt\n           | MINUS vardt\n           | vardt\n    \n    vardt : ID\n          | DTI\n          | DTF\n          | DTB\n          | DTS\n          | ID bracket\n          | ID bracket bracket\n    empty :'
    
_lr_action_items = {'CONS':([0,3,5,7,17,21,28,30,32,55,77,101,107,116,],[6,6,-4,-6,-5,-7,-10,-8,-9,-19,-11,-12,-20,-21,]),'END':([0,2,3,4,5,7,16,17,21,28,30,32,55,77,101,107,116,],[-54,15,-54,-3,-4,-6,-2,-5,-7,-10,-8,-9,-19,-11,-12,-20,-21,]),'ARR':([0,3,5,6,7,17,21,28,30,32,55,77,101,107,116,],[9,9,-4,19,-6,-5,-7,-10,-8,-9,-19,-11,-12,-20,-21,]),'MAT':([0,3,5,6,7,17,21,28,30,32,55,77,101,107,116,],[10,10,-4,20,-6,-5,-7,-10,-8,-9,-19,-11,-12,-20,-21,]),'INT':([0,3,5,6,7,9,10,17,19,20,21,28,30,32,55,77,101,107,116,],[11,11,-4,11,-6,11,11,-5,11,11,-7,-10,-8,-9,-19,-11,-12,-20,-21,]),'FLOAT':([0,3,5,6,7,9,10,17,19,20,21,28,30,32,55,77,101,107,116,],[12,12,-4,12,-6,12,12,-5,12,12,-7,-10,-8,-9,-19,-11,-12,-20,-21,]),'BOOL':([0,3,5,6,7,9,10,17,19,20,21,28,30,32,55,77,101,107,116,],[13,13,-4,13,-6,13,13,-5,13,13,-7,-10,-8,-9,-19,-11,-12,-20,-21,]),'STRING':([0,3,5,6,7,9,10,17,19,20,21,28,30,32,55,77,101,107,116,],[14,14,-4,14,-6,14,14,-5,14,14,-7,-10,-8,-9,-19,-11,-12,-20,-21,]),'$end':([1,15,],[0,-1,]),'ID':([8,11,12,13,14,18,23,24,26,27,29,41,42,44,50,57,58,59,60,61,62,63,64,67,68,71,72,98,111,],[22,-15,-16,-17,-18,25,31,33,34,35,36,36,36,36,80,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'PNTCOMMA':([22,36,37,38,39,40,43,45,46,47,48,49,54,56,65,66,69,70,73,75,76,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,103,104,105,106,113,114,],[28,-47,55,-54,-54,-54,-46,-48,-49,-50,-51,77,-52,-25,-34,-35,-38,-39,-42,-44,-45,101,-53,-26,-27,-28,-29,-30,-31,-32,-33,-54,-54,-54,-54,-43,107,-13,-14,-36,-37,-40,-41,116,-22,]),'EQUALS':([22,25,49,52,81,82,99,100,],[29,29,78,78,102,102,-13,-14,]),'LPAREN':([29,41,57,58,59,60,61,62,63,64,67,68,71,72,98,111,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'PLUS':([29,36,39,40,41,43,45,46,47,48,54,57,58,59,60,61,62,63,64,67,68,70,71,72,73,75,76,83,92,93,94,95,96,98,99,100,105,106,111,],[42,-47,67,-54,42,-46,-48,-49,-50,-51,-52,42,42,42,42,42,42,42,42,42,42,-39,42,42,-42,-44,-45,-53,67,67,-54,-54,-43,42,-13,-14,-40,-41,42,]),'MINUS':([29,36,39,40,41,43,45,46,47,48,54,57,58,59,60,61,62,63,64,67,68,70,71,72,73,75,76,83,92,93,94,95,96,98,99,100,105,106,111,],[44,-47,68,-54,44,-46,-48,-49,-50,-51,-52,44,44,44,44,44,44,44,44,44,44,-39,44,44,-42,-44,-45,-53,68,68,-54,-54,-43,44,-13,-14,-40,-41,44,]),'DTI':([29,41,42,44,50,57,58,59,60,61,62,63,64,67,68,71,72,98,111,],[45,45,45,45,79,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'DTF':([29,41,42,44,57,58,59,60,61,62,63,64,67,68,71,72,98,111,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'DTB':([29,41,42,44,57,58,59,60,61,62,63,64,67,68,71,72,98,111,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'DTS':([29,41,42,44,57,58,59,60,61,62,63,64,67,68,71,72,98,111,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'LBRCKT':([31,33,34,35,36,51,53,54,78,99,100,102,109,114,],[50,50,50,50,50,50,50,50,98,-13,-14,98,98,-22,]),'TIMES':([36,40,43,45,46,47,48,54,75,76,83,94,95,96,99,100,],[-47,71,-46,-48,-49,-50,-51,-52,-44,-45,-53,71,71,-43,-13,-14,]),'DIVIDE':([36,40,43,45,46,47,48,54,75,76,83,94,95,96,99,100,],[-47,72,-46,-48,-49,-50,-51,-52,-44,-45,-53,72,72,-43,-13,-14,]),'GREATER':([36,38,39,40,43,45,46,47,48,54,66,69,70,73,75,76,83,92,93,94,95,96,99,100,103,104,105,106,],[-47,57,-54,-54,-46,-48,-49,-50,-51,-52,-35,-38,-39,-42,-44,-45,-53,-54,-54,-54,-54,-43,-13,-14,-36,-37,-40,-41,]),'LOWER':([36,38,39,40,43,45,46,47,48,54,66,69,70,73,75,76,83,92,93,94,95,96,99,100,103,104,105,106,],[-47,58,-54,-54,-46,-48,-49,-50,-51,-52,-35,-38,-39,-42,-44,-45,-53,-54,-54,-54,-54,-43,-13,-14,-36,-37,-40,-41,]),'SAME':([36,38,39,40,43,45,46,47,48,54,66,69,70,73,75,76,83,92,93,94,95,96,99,100,103,104,105,106,],[-47,59,-54,-54,-46,-48,-49,-50,-51,-52,-35,-38,-39,-42,-44,-45,-53,-54,-54,-54,-54,-43,-13,-14,-36,-37,-40,-41,]),'LEQUAL':([36,38,39,40,43,45,46,47,48,54,66,69,70,73,75,76,83,92,93,94,95,96,99,100,103,104,105,106,],[-47,60,-54,-54,-46,-48,-49,-50,-51,-52,-35,-38,-39,-42,-44,-45,-53,-54,-54,-54,-54,-43,-13,-14,-36,-37,-40,-41,]),'GEQUAL':([36,38,39,40,43,45,46,47,48,54,66,69,70,73,75,76,83,92,93,94,95,96,99,100,103,104,105,106,],[-47,61,-54,-54,-46,-48,-49,-50,-51,-52,-35,-38,-39,-42,-44,-45,-53,-54,-54,-54,-54,-43,-13,-14,-36,-37,-40,-41,]),'NOTEQUAL':([36,38,39,40,43,45,46,47,48,54,66,69,70,73,75,76,83,92,93,94,95,96,99,100,103,104,105,106,],[-47,62,-54,-54,-46,-48,-49,-50,-51,-52,-35,-38,-39,-42,-44,-45,-53,-54,-54,-54,-54,-43,-13,-14,-36,-37,-40,-41,]),'AND':([36,38,39,40,43,45,46,47,48,54,66,69,70,73,75,76,83,92,93,94,95,96,99,100,103,104,105,106,],[-47,63,-54,-54,-46,-48,-49,-50,-51,-52,-35,-38,-39,-42,-44,-45,-53,-54,-54,-54,-54,-43,-13,-14,-36,-37,-40,-41,]),'OR':([36,38,39,40,43,45,46,47,48,54,66,69,70,73,75,76,83,92,93,94,95,96,99,100,103,104,105,106,],[-47,64,-54,-54,-46,-48,-49,-50,-51,-52,-35,-38,-39,-42,-44,-45,-53,-54,-54,-54,-54,-43,-13,-14,-36,-37,-40,-41,]),'RPAREN':([36,38,39,40,43,45,46,47,48,54,56,65,66,69,70,73,74,75,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,100,103,104,105,106,],[-47,-54,-54,-54,-46,-48,-49,-50,-51,-52,-25,-34,-35,-38,-39,-42,96,-44,-45,-53,-26,-27,-28,-29,-30,-31,-32,-33,-54,-54,-54,-54,-43,-13,-14,-36,-37,-40,-41,]),'COMMA':([36,38,39,40,43,45,46,47,48,54,56,65,66,69,70,73,75,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,100,103,104,105,106,108,115,],[-47,-54,-54,-54,-46,-48,-49,-50,-51,-52,-25,-34,-35,-38,-39,-42,-44,-45,-53,-26,-27,-28,-29,-30,-31,-32,-33,-54,-54,-54,-54,-43,-13,-14,-36,-37,-40,-41,111,111,]),'RBRCKT':([36,38,39,40,43,45,46,47,48,54,56,65,66,69,70,73,75,76,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,100,103,104,105,106,108,110,112,115,117,],[-47,-54,-54,-54,-46,-48,-49,-50,-51,-52,-25,-34,-35,-38,-39,-42,-44,-45,99,100,-53,-26,-27,-28,-29,-30,-31,-32,-33,-54,-54,-54,-54,-43,-13,-14,-36,-37,-40,-41,-54,114,-24,-54,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'globales':([0,3,],[2,16,]),'declarar':([0,3,],[3,3,]),'empty':([0,3,38,39,40,92,93,94,95,108,115,],[4,4,65,69,73,69,69,73,73,112,112,]),'inicializada':([0,3,6,],[5,5,17,]),'noinicializada':([0,3,],[7,7,]),'tipo':([0,3,6,9,10,19,20,],[8,8,18,23,24,26,27,]),'asignacion':([8,18,],[21,21,]),'asignacioninicialarr':([23,26,],[30,30,]),'asignacioninicialmat':([24,27,],[32,32,]),'expresion':([29,41,98,111,],[37,74,108,115,]),'exp':([29,41,57,58,59,60,61,62,63,64,98,111,],[38,38,84,85,86,87,88,89,90,91,38,38,]),'termino':([29,41,57,58,59,60,61,62,63,64,67,68,98,111,],[39,39,39,39,39,39,39,39,39,39,92,93,39,39,]),'factor':([29,41,57,58,59,60,61,62,63,64,67,68,71,72,98,111,],[40,40,40,40,40,40,40,40,40,40,40,40,94,95,40,40,]),'vardt':([29,41,42,44,57,58,59,60,61,62,63,64,67,68,71,72,98,111,],[43,43,75,76,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'bracket':([31,33,34,35,36,51,53,54,],[49,51,52,53,54,81,82,83,]),'expresionrelacional':([38,],[56,]),'expsumres':([39,92,93,],[66,103,104,]),'terminomuldiv':([40,94,95,],[70,105,106,]),'looparreglo':([78,102,109,],[97,109,113,]),'expresionloop':([108,115,],[110,117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> globales END','programa',2,'p_programa','yacc.py',8),
  ('globales -> declarar globales','globales',2,'p_globales','yacc.py',16),
  ('globales -> empty','globales',1,'p_globales','yacc.py',17),
  ('declarar -> inicializada','declarar',1,'p_declarar','yacc.py',22),
  ('declarar -> CONS inicializada','declarar',2,'p_declarar','yacc.py',23),
  ('declarar -> noinicializada','declarar',1,'p_declarar','yacc.py',24),
  ('inicializada -> tipo asignacion','inicializada',2,'p_inicializada','yacc.py',29),
  ('inicializada -> ARR tipo asignacioninicialarr','inicializada',3,'p_inicializada','yacc.py',30),
  ('inicializada -> MAT tipo asignacioninicialmat','inicializada',3,'p_inicializada','yacc.py',31),
  ('noinicializada -> tipo ID PNTCOMMA','noinicializada',3,'p_noinicializada','yacc.py',36),
  ('noinicializada -> ARR tipo ID bracket PNTCOMMA','noinicializada',5,'p_noinicializada','yacc.py',37),
  ('noinicializada -> MAT tipo ID bracket bracket PNTCOMMA','noinicializada',6,'p_noinicializada','yacc.py',38),
  ('bracket -> LBRCKT DTI RBRCKT','bracket',3,'p_bracket','yacc.py',43),
  ('bracket -> LBRCKT ID RBRCKT','bracket',3,'p_bracket','yacc.py',44),
  ('tipo -> INT','tipo',1,'p_tipo','yacc.py',50),
  ('tipo -> FLOAT','tipo',1,'p_tipo','yacc.py',51),
  ('tipo -> BOOL','tipo',1,'p_tipo','yacc.py',52),
  ('tipo -> STRING','tipo',1,'p_tipo','yacc.py',53),
  ('asignacion -> ID EQUALS expresion PNTCOMMA','asignacion',4,'p_asignacion','yacc.py',59),
  ('asignacioninicialarr -> ID bracket EQUALS looparreglo PNTCOMMA','asignacioninicialarr',5,'p_asignacioninicialarr','yacc.py',64),
  ('asignacioninicialmat -> ID bracket bracket EQUALS looparreglo looparreglo PNTCOMMA','asignacioninicialmat',7,'p_asignacioninicialmat','yacc.py',69),
  ('looparreglo -> LBRCKT expresion expresionloop RBRCKT','looparreglo',4,'p_looparreglo','yacc.py',74),
  ('expresionloop -> COMMA expresion expresionloop','expresionloop',3,'p_expresionloop','yacc.py',79),
  ('expresionloop -> empty','expresionloop',1,'p_expresionloop','yacc.py',80),
  ('expresion -> exp expresionrelacional','expresion',2,'p_expresion','yacc.py',85),
  ('expresionrelacional -> GREATER exp','expresionrelacional',2,'p_expresionrelacional','yacc.py',90),
  ('expresionrelacional -> LOWER exp','expresionrelacional',2,'p_expresionrelacional','yacc.py',91),
  ('expresionrelacional -> SAME exp','expresionrelacional',2,'p_expresionrelacional','yacc.py',92),
  ('expresionrelacional -> LEQUAL exp','expresionrelacional',2,'p_expresionrelacional','yacc.py',93),
  ('expresionrelacional -> GEQUAL exp','expresionrelacional',2,'p_expresionrelacional','yacc.py',94),
  ('expresionrelacional -> NOTEQUAL exp','expresionrelacional',2,'p_expresionrelacional','yacc.py',95),
  ('expresionrelacional -> AND exp','expresionrelacional',2,'p_expresionrelacional','yacc.py',96),
  ('expresionrelacional -> OR exp','expresionrelacional',2,'p_expresionrelacional','yacc.py',97),
  ('expresionrelacional -> empty','expresionrelacional',1,'p_expresionrelacional','yacc.py',98),
  ('exp -> termino expsumres','exp',2,'p_exp','yacc.py',104),
  ('expsumres -> PLUS termino expsumres','expsumres',3,'p_expsumres','yacc.py',109),
  ('expsumres -> MINUS termino expsumres','expsumres',3,'p_expsumres','yacc.py',110),
  ('expsumres -> empty','expsumres',1,'p_expsumres','yacc.py',111),
  ('termino -> factor terminomuldiv','termino',2,'p_termino','yacc.py',117),
  ('terminomuldiv -> TIMES factor terminomuldiv','terminomuldiv',3,'p_terminomuldiv','yacc.py',122),
  ('terminomuldiv -> DIVIDE factor terminomuldiv','terminomuldiv',3,'p_terminomuldiv','yacc.py',123),
  ('terminomuldiv -> empty','terminomuldiv',1,'p_terminomuldiv','yacc.py',124),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','yacc.py',130),
  ('factor -> PLUS vardt','factor',2,'p_factor','yacc.py',131),
  ('factor -> MINUS vardt','factor',2,'p_factor','yacc.py',132),
  ('factor -> vardt','factor',1,'p_factor','yacc.py',133),
  ('vardt -> ID','vardt',1,'p_vardt','yacc.py',139),
  ('vardt -> DTI','vardt',1,'p_vardt','yacc.py',140),
  ('vardt -> DTF','vardt',1,'p_vardt','yacc.py',141),
  ('vardt -> DTB','vardt',1,'p_vardt','yacc.py',142),
  ('vardt -> DTS','vardt',1,'p_vardt','yacc.py',143),
  ('vardt -> ID bracket','vardt',2,'p_vardt','yacc.py',144),
  ('vardt -> ID bracket bracket','vardt',3,'p_vardt','yacc.py',145),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',149),
]
